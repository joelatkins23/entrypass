{"version":3,"sources":["src/app/terms/terms-routing.module.ts","src/app/terms/terms.component.html","src/app/terms/terms.component.ts","src/app/terms/terms.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {TermsComponent} from './terms.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TermsComponent,\r\n    data: {\r\n      breadcrumb: 'Terms Of Use'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TermsRoutingModule { }\r\n","<section class=\"contact-us-sec1 mt-70 pb-40 faq_content\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                <div class=\"mt-50\">\r\n                    <div class=\"bgwhite boxshadow-2 border-radius8 pt-20 pb-20 pl-30 pr-30\">\r\n                        <div class=\"mb-10\">\r\n                            <h4 class=\"fontsize-26 fontfamily-bold colorblack text-uppercase mt-25 mb-10\">Terms of Use</h4>\r\n                        </div>\r\n                        <div class=\"mt-30\" [innerHtml]=\"TermsOfUse\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-terms',\r\n  templateUrl: './terms.component.html',\r\n  styleUrls: [\r\n    './terms.component.scss'\r\n  ],\r\n})\r\nexport class TermsComponent implements OnInit {\r\n  TermsOfUse:\"\";\r\n  constructor(\r\n    private api: ApisService,\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router\r\n  ) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getConfig(); \r\n  }\r\n  getConfig(){\r\n    this.spinner.show();\r\n      this.api.getConfig().subscribe(res => {\r\n        this.spinner.hide();\r\n        var TermsOfUseData =res['result'].data.filter((element) => element.Item == 'Terms');\r\n        this.TermsOfUse=(TermsOfUseData) ? TermsOfUseData[0].Content :'';\r\n    }, err => {\r\n      this.spinner.hide();\r\n    });  \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TermsRoutingModule } from './terms-routing.module';\r\nimport { TermsComponent } from './terms.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TermsRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgxSkeletonLoaderModule\r\n  ],\r\n  declarations: [TermsComponent]\r\n})\r\nexport class TermsModule { }\r\n"],"sourceRoot":"webpack:///","file":"terms-terms-module-ngfactory-es5.js"}