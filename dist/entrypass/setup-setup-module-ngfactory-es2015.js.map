{"version":3,"sources":["./src/app/setup/setup-routing.module.ts","./src/app/setup/setup.component.html","./src/app/setup/setup.component.ts","./src/app/setup/setup.module.ts"],"names":[],"mappings":"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","file":"setup-setup-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SetupComponent } from './setup.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SetupComponent,\r\n    data: {\r\n      breadcrumb: 'Setup'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SetupRoutingModule { }\r\n","<div class=\"web-sign-section\">\r\n    <div class=\"container mt-50\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12 m-auto\">\r\n                <div class=\"bgwhite boxshadow-2 border-radius8 mt-50 pt-20 pb-20 pl-15 pr-15 mb-50\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-9 col-lg-6 col-md-12 col-sm-12 col-12 m-auto\">\r\n                            <div class=\"sign-bock bgwhite pt-10 pb-10 pl-10 pr-10\">\r\n                                <div class=\"text-center\">\r\n                                    <!-- <img src=\"images/logo.svg\" class=\"sign-logo\"> -->\r\n                                    <h4 class=\"fontsize-26 fontfamily-bold colorblack text-uppercase mt-0 mb-10\"> Admin User Create</h4>                                    \r\n                                    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"mt-30\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"[(ngModel)]=\"Name\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Name\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\" [(ngModel)]=\"UserName\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"User Name\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>                                            \r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp phone-o-field\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-xl-5 col-lg-5 col-md-12 col-sm-12 col-12\">\r\n                                                            <div class=\"relative\">\r\n                                                                <select   [(ngModel)]=\"DefaultValue\" name=\"phonecode\"  [ngModelOptions]=\"{standalone: true}\" class=\"form-control input-tp-1\">\r\n                                                                  <option value=\"\" *ngFor=\"let item of countries\" value=\"{{item.callingCodes[0]}}\">\r\n                                                                    + {{item.callingCodes[0]}} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;({{item.name}})\r\n                                                                  </option>\r\n                                                                </select>\r\n                                                                <!-- <input type=\"text\" name=\"\" placeholder=\"+1 246\" class=\"form-control input-tp-1\"> -->\r\n                                                                <img [src]=\"getCountry()\" class=\"flag-img\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-xl-7 col-lg-7 col-md-12 col-sm-12 col-12\">\r\n                                                            <input type=\"text\" [(ngModel)]=\"Phone\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Phone Number\" class=\"form-control input-tp-1\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <select [(ngModel)]=\"Country\"  [ngModelOptions]=\"{standalone: true}\" class=\"form-control  input-tp-1\">\r\n                                                      <option value=\"\" >Select Country</option>\r\n                                                      <option value=\"{{item.name}}\"  *ngFor=\"let item of countries\">{{item.name}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-12 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"  [(ngModel)]=\"Address1\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Address 1\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-12 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"  [(ngModel)]=\"Address2\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Address 2\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\" [(ngModel)]=\"Region\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"State/Parish/Region\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                           \r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\" [ngClass]=\"(submited && form.controls['email'].invalid) ? 'mb-0':''\">\r\n                                                    <input name=\"email\" placeholder=\"Email Address\"  [(ngModel)]=\"Email\"    required type=\"text\" formControlName=\"email\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                                <div *ngIf=\"submited && form.controls['email'].invalid\" class=\"alert-danger text-left\">Email is not valid</div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\" [ngClass]=\"(submited && form.controls['password'].invalid) ? 'mb-0':''\">\r\n                                                    <input name=\"password\" placeholder=\"Password\"   [(ngModel)]=\"Password\" required type=\"password\" formControlName=\"password\" class=\"form-control input-tp-1\">                                                   \r\n                                                </div>\r\n                                                <div *ngIf=\"submited && form.controls['password'].invalid\" class=\"alert-danger text-left\">Password is required</div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\"  [ngClass]=\"((submited && form.controls['confirm_pass'].errors && form.controls['confirm_pass'].errors.required) || (submited && form.controls['confirm_pass'].errors && !form.controls['confirm_pass'].errors.required && form.controls['confirm_pass'].errors.mustMatch)) ? 'mb-0':''\">\r\n                                                    <input name=\"confirm_pass\" placeholder=\"Confirm Password\"  [(ngModel)]=\"ConfirmPassword\"   required type=\"password\" formControlName=\"confirm_pass\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                                <div *ngIf=\"submited && form.controls['confirm_pass'].errors && form.controls['confirm_pass'].errors.required\" class=\"alert-danger text-left\">Confirm Password is required</div>\r\n                                                <div *ngIf=\"submited && form.controls['confirm_pass'].errors && !form.controls['confirm_pass'].errors.required && form.controls['confirm_pass'].errors.mustMatch\" class=\"alert-danger text-left\">Confirm Password is not matched</div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp text-left\">\r\n                                                    <div class=\"checkbox mt-0\">\r\n                                                        <label class=\"fontsize-12 color666 fontfamily-medium\">\r\n                                                        <input type=\"checkbox\" name=\"remember\" value=\"\"  data-toggle=\"modal\" data-target=\".selectCatModal\">\r\n                                                        <span class=\"cr\">\r\n                                                          <i class=\"cr-icon fa fa-check\"></i>\r\n                                                        </span>\r\n                                                        I agree to the Entrypass  <a [routerLink]=\"['/auth/terms']\" class=\"colorblue1 text-underline\"> Terms & Conditions</a>\r\n                                                      </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 m-auto\">\r\n                                                <div class=\"form-group input-rw-tp mt-30 mb-0\">\r\n                                                    <button type=\"submit\" class=\"btn btn-large btn-rad-24\">Sign Up</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng2-toasty></ng2-toasty>","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from 'src/app/services/apis.service';\r\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {FormGroup,FormControl,Validator,FormBuilder, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-setup',\r\n  templateUrl: './setup.component.html',\r\n  styleUrls: ['./setup.component.scss']\r\n})\r\nexport class SetupComponent implements OnInit {\r\n  countries = [];\r\n  Country = \"\"\r\n  DefaultValue = \"\";\r\n  Name = \"\";\r\n  UserName = \"\";\r\n  Address1 = \"\";\r\n  Address2 = \"\";\r\n  Phone=\"\";\r\n  Region = \"\";\r\n  Email = \"\";\r\n  Password = \"\";\r\n  ConfirmPassword=\"\";\r\n  submited = false;\r\n  constructor(\r\n    private api: ApisService,\r\n    private toastyService: ToastyService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private client:HttpClient,\r\n    private formbuilder:FormBuilder\r\n  ) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n    this.client.get('https://restcountries.eu/rest/v2/all').subscribe(data=>{         \r\n      for(let item in data)  {\r\n          this.countries.push(data[item]);\r\n          }\r\n          this.Country = \"Barbados\"\r\n          this.DefaultValue = \"1246\";\r\n      },error=>{\r\n          console.log(error)\r\n      })\r\n  }\r\n  form = this.formbuilder.group({\r\n      email:new FormControl('',[Validators.email,Validators.required]),\r\n      password:new FormControl('',[Validators.required]),\r\n      confirm_pass:new FormControl('',[Validators.required])\r\n  },{validators:this.mustmatch('password','confirm_pass')})\r\n\r\n  mustmatch(controlName:string,matchingControlName:string)\r\n  {\r\n      return (formGroup:FormGroup)=>\r\n      {\r\n          const control = formGroup.controls[controlName];\r\n          const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n          if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n              // return if another validator has already found an error on the matchingControl\r\n              return;\r\n          }\r\n\r\n          // set error on matchingControl if validation fails\r\n          if (control.value !== matchingControl.value) {\r\n              matchingControl.setErrors({ mustMatch: true });\r\n          } else {\r\n              matchingControl.setErrors(null);\r\n          }\r\n      }\r\n  }\r\n\r\n  getCountry()\r\n  {\r\n      for(let item in this.countries)\r\n      {\r\n          if(this.countries[item].callingCodes && this.countries[item].callingCodes[0] == this.DefaultValue)\r\n          {\r\n              return this.countries[item].flag;\r\n          }\r\n      }\r\n  }\r\n  submit()\r\n    {\r\n     \r\n        this.submited = true;\r\n        if(this.form.invalid)\r\n        {\r\n            return;\r\n        }\r\n        var formdata={                    \r\n            Name : this.Name,\r\n            UserName : this.UserName,\r\n            Email : this.Email,\r\n            Password : this.Password,\r\n            DefaultValue :this.DefaultValue,\r\n            phone:this.Phone,\r\n            Country : this.Country,  \r\n            Address1 : this.Address1,\r\n            Address2 : this.Address2,\r\n            Region : this.Region,\r\n            Role:\"admin\"\r\n            \r\n        }\r\n        this.spinner.show();\r\n        this.api.adminsignup(formdata).subscribe(res => {\r\n            this.spinner.hide();  \r\n            if(res['result'].status==1){\r\n                this.success(res['result'].message);\r\n                this.router.navigate(['auth/login']); \r\n            }else{\r\n              this.error(res['result'].message);\r\n              this.router.navigate(['auth/login']); \r\n            }            \r\n        }, err => {\r\n            this.spinner.hide();\r\n            this.error('Failed');\r\n            console.log(err);\r\n        });\r\n       \r\n    }\r\n    error(message) {\r\n      const toastOptions: ToastOptions = {\r\n        title: this.api.translate('Error'),\r\n        msg: message,\r\n        showClose: true,\r\n        timeout: 2000,\r\n        theme: 'default',\r\n        onAdd: (toast: ToastData) => {\r\n          console.log('Toast ' + toast.id + ' has been added!');\r\n        },\r\n        onRemove: function (toast: ToastData) {\r\n          console.log('Toast ' + toast.id + ' has been removed!');\r\n        }\r\n      };\r\n      // Add see all possible types in one shot\r\n      this.toastyService.error(toastOptions);\r\n    }\r\n    success(message) {\r\n      const toastOptions: ToastOptions = {\r\n        title: this.api.translate('Success'),\r\n        msg: message,\r\n        showClose: true,\r\n        timeout: 2000,\r\n        theme: 'default',\r\n        onAdd: (toast: ToastData) => {\r\n          console.log('Toast ' + toast.id + ' has been added!');\r\n        },\r\n        onRemove: function (toast: ToastData) {\r\n          console.log('Toast ' + toast.id + ' has been removed!');\r\n        }\r\n      };\r\n      // Add see all possible types in one shot\r\n      this.toastyService.success(toastOptions);\r\n    } \r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SetupRoutingModule } from './setup-routing.module';\r\nimport { SetupComponent } from './setup.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n\r\n@NgModule({\r\n  declarations: [SetupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SetupRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule\r\n  ]\r\n})\r\nexport class SetupModule { }\r\n"],"sourceRoot":"webpack:///"}