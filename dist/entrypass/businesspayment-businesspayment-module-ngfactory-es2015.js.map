{"version":3,"sources":["./src/app/businesspayment/businesspayment-routing.module.ts","./src/app/businesspayment/businesspayment.component.html","./src/app/businesspayment/businesspayment.component.ts","./src/app/businesspayment/businesspayment.module.ts"],"names":[],"mappings":"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","file":"businesspayment-businesspayment-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {BusinesspaymentComponent} from './businesspayment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BusinesspaymentComponent,\r\n    data: {\r\n      breadcrumb: 'Subscription Payments'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BusinesspaymentRoutingModule { }\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"right-sidebar-content mt-40 bgwhite boxshadow-2 border-radius8\">\r\n            <div class=\"\">\r\n                <div class=\"d-flex pt-0 pb-15 pl-20 pr-20\">\r\n                    <div class=\"ttle-h fontsize-14 fontfamily-medium color333\">Subscription Payments</div>\r\n                    <div class=\"ml-auto\">\r\n                        <button class=\"btn widthfit btn-border-b btn-rad-24 btn-small\" (click)=\"export()\">Export </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-3\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\" *ngIf=\"paymentdata.length==0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th class=\"text-left\">Business Name</th>\r\n                                    <th class=\"text-center\">Subscription type</th>\r\n                                    <th class=\"text-center\">Number of Users</th>\r\n                                    <th class=\"text-center\">Frequency</th>\r\n                                    <th class=\"text-center\">Amount</th>\r\n                                    <th class=\"text-left\">Subscription Date</th>\r\n                                    <th class=\"text-center\">Next Payment Date</th>\r\n                                    <th class=\"text-center\">Payment Status</th>\r\n                                    <th class=\"text-center\">Account Status</th>\r\n                                </tr>\r\n                            </thead>                        \r\n                        </table>\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\" *ngIf=\"paymentdata.length>0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th class=\"text-left\">Business Name</th>\r\n                                    <th class=\"text-center\">Subscription type</th>\r\n                                    <th class=\"text-center\">Number of Users</th>\r\n                                    <th class=\"text-center\">Frequency</th>\r\n                                    <th class=\"text-center\">Amount</th>\r\n                                    <th class=\"text-left\">Subscription Date</th>\r\n                                    <th class=\"text-center\">Next Payment Date</th>\r\n                                    <th class=\"text-center\">Payment Status</th>\r\n                                    <th class=\"text-center\">Account Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let item of paymentdata; let i = index;\">\r\n                                    <td class=\"text-center\">{{i + 1}}</td>\r\n                                    <td class=\"text-left\">{{item.Name}}</td>\r\n                                    <td class=\"text-center\">{{item.SubscriptionType}}</td>\r\n                                    <td class=\"text-center\">{{item.UserNumber}}</td>\r\n                                    <td class=\"text-center\">{{item.Frequency}}</td>\r\n                                    <td class=\"text-center\">${{item.Totalamount}}</td>\r\n                                    <td class=\"text-center\">{{item.SubscriptionDate | date: date_format}}</td>\r\n                                    <td class=\"text-center\">{{item.NextPaymentDate | date: date_format}}</td>\r\n                                    <td class=\"text-center status-blue\" [ngClass]=\"((item.AccountStatus=='In Good Standing')? 'status-blue' :'status-red')\">{{item.AccountStatus}}</td>\r\n                                    <td class=\"text-center \" [ngClass]=\"((item.Status==1)? 'status-blue' :'status-red')\">{{(item.Status==1)? \"Active\" :\"Non Active\"}}</td>\r\n                                </tr>                            \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport * as moment from 'moment';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-businesspayment',\r\n  templateUrl: './businesspayment.component.html',\r\n  styleUrls: [\r\n    './businesspayment.component.scss'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BusinesspaymentComponent implements OnInit {\r\n  payments:any;\r\n  paymentdata= [];\r\n  public  date_format = 'd MMM yyyy';\r\n  dtOptions: DataTables.Settings = {};\r\n  constructor(\r\n    private api: ApisService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n  ) {   \r\n    var user = localStorage.getItem('Users');\r\n    this.getpaymentData(JSON.parse(user).Id);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      // pagingType: 'full_numbers',\r\n      pageLength: 10,\r\n      lengthChange:false,\r\n      processing: true,\r\n      searching:true,\r\n      info:false,\r\n      \r\n    };\r\n  }\r\n  getpaymentData(id){\r\n    this.spinner.show();\r\n      this.api.getBusinesspaymentData(id).subscribe(res => {\r\n        this.spinner.hide();\r\n        this.paymentdata=res['result'].data;\r\n        this.dtOptions = {\r\n          pageLength: 10,\r\n          lengthChange:false,\r\n          processing: true,\r\n          searching:true,\r\n          info:false,\r\n          \r\n        };\r\n    }, err => {\r\n      this.spinner.hide();\r\n    }); \r\n  }\r\n  export(){\r\n  var exportdata=[];\r\n  this.paymentdata.forEach(obj => { \r\n      var location= obj.Address1+\" \"+obj.Address2+\" \"+obj.Country;    \r\n      var ele={\r\n        \"Business Name\":obj.Name,\r\n        \"Subscription type\":obj.SubscriptionType,\r\n        \"Number of Users\":obj.UserNumber,\r\n        \"Frequency\":obj.Frequency,\r\n        \"Amount\":\"$\"+obj.Totalamount,\r\n        \"OrderId\":obj.OrderId,\r\n        \"Location\":location.replace(\",\", \" \"),\r\n        \"Subscription Date\":obj.SubscriptionDate,\r\n        \"Next Payment Date\":obj.NextPaymentDate,\r\n        \"Payment Status\":obj.AccountStatus,       \r\n        \"Account Status\":(obj.Status==1)? \"Active\":\"Non Active\"\r\n      }\r\n      exportdata.push(ele);\r\n    });\r\n    var filename=\"Subscription Payments\";\r\n    let csvData = this.ConvertToCSV(exportdata, ['Business Name','Subscription type','Number of Users','Frequency','Amount','OrderId','Location','Subscription Date','Next Payment Date','Payment Status','Account Status']);\r\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n    let dwldLink = document.createElement(\"a\");\r\n    let url = URL.createObjectURL(blob);\r\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n\r\n    if (isSafariBrowser) {  \r\n        dwldLink.setAttribute(\"target\", \"_blank\");\r\n    }\r\n        dwldLink.setAttribute(\"href\", url);\r\n        dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n        dwldLink.style.visibility = \"hidden\";\r\n        document.body.appendChild(dwldLink);\r\n        dwldLink.click();\r\n        document.body.removeChild(dwldLink);\r\n  }\r\n  ConvertToCSV(objArray, headerList) {\r\n\r\n      let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n      let str = '';\r\n      let row = 'S.No,';\r\n      for (let index in headerList) {\r\n          row += headerList[index] + ',';\r\n      }\r\n      row = row.slice(0, -1);\r\n      str += row + '\\r\\n';\r\n      for (let i = 0; i < array.length; i++) {\r\n          let line = (i+1)+'';\r\n          for (let index in headerList) {\r\n              let head = headerList[index];\r\n              line += ',' + array[i][head];\r\n        }\r\n        str += line + '\\r\\n';\r\n      }\r\n    return str;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BusinesspaymentRoutingModule } from './businesspayment-routing.module';\r\nimport { BusinesspaymentComponent } from './businesspayment.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BusinesspaymentRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgxSkeletonLoaderModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n  declarations: [BusinesspaymentComponent]\r\n})\r\nexport class BusinesspaymentModule { }\r\n"],"sourceRoot":"webpack:///"}