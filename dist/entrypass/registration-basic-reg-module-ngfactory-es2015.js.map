{"version":3,"sources":["./src/app/auth/registration/basic-reg-routing.module.ts","./src/app/auth/registration/basic-reg.component.html","./src/app/auth/registration/basic-reg.component.ts","./src/app/auth/registration/basic-reg.module.ts","./src/app/custom-validators.ts"],"names":[],"mappings":"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","file":"registration-basic-reg-module-ngfactory-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BasicRegComponent} from './basic-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicRegComponent,\r\n    data: {\r\n      title: 'Simple Registration'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicRegRoutingModule { }\r\n","<div class=\"web-sign-section\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12 m-auto wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                <div class=\"bgwhite boxshadow-2 border-radius8 mt-50 pt-20 pb-20 pl-15 pr-15 mb-50\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-9 col-lg-6 col-md-12 col-sm-12 col-12 m-auto\">\r\n                            <div class=\"sign-bock bgwhite pt-10 pb-10 pl-10 pr-10\">\r\n                                <div class=\"text-center\">\r\n                                    <!-- <img src=\"images/logo.svg\" class=\"sign-logo\"> -->\r\n                                    <h4 class=\"fontsize-26 fontfamily-bold colorblack text-uppercase mt-0 mb-10\">Sign Up</h4>\r\n                                    <p class=\"fontsize-14 fontfamily-medium color4848 mb-50\">Enter the basic detail to register</p>\r\n                                    <!-- <div class=\"premium-package-block d-flex pt-20 pb-20 pl-25 pr-25 text-left border-radius8 bggray1 mb-15\">\r\n                                        <div class=\"premium-package-block-lft\">\r\n                                            <h6 class=\"fontfamily-medium fontsize-16 colorblack mb-1\">Premium Package</h6>\r\n                                            <h5 class=\"fontfamily-medium fontsize-24 colorblue1 mb-0\">$49</h5>\r\n                                        </div>\r\n                                        <div class=\"ml-auto\">\r\n                                            <p class=\"mb-0 fontfamily-medium fontsize-12 color4848\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse bibendum euismod rutrum. Nulla pellentesque, massa eget tempus molestie, metus dolor eleifend orci, eu malesuada ante metus non ipsum.</p>\r\n                                        </div>\r\n                                    </div> -->\r\n                                    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"[(ngModel)]=\"Name\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Name\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\" [(ngModel)]=\"UserName\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"User Name\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"  [(ngModel)]=\"Birthday\" readonly  [ngModelOptions]=\"{standalone: true}\"  placeholder=\"Birthday\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp phone-o-field\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-xl-5 col-lg-5 col-md-12 col-sm-12 col-12\">\r\n                                                            <div class=\"relative\">\r\n                                                                <select   [(ngModel)]=\"DefaultValue\" name=\"phonecode\"  [ngModelOptions]=\"{standalone: true}\" class=\"form-control input-tp-1\">\r\n                                                                  <option value=\"\" *ngFor=\"let item of countries\" value=\"{{item.callingCodes[0]}}\">\r\n                                                                    + {{item.callingCodes[0]}} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;({{item.name}})\r\n                                                                  </option>\r\n                                                                </select>\r\n                                                                <!-- <input type=\"text\" name=\"\" placeholder=\"+1 246\" class=\"form-control input-tp-1\"> -->\r\n                                                                <img [src]=\"getCountry()\" class=\"flag-img\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-xl-7 col-lg-7 col-md-12 col-sm-12 col-12\">\r\n                                                            <input type=\"text\" [(ngModel)]=\"Phone\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Phone Number\" class=\"form-control input-tp-1\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"[(ngModel)]=\"BusinessRegister\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Business Registration/Company No\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>                                           \r\n                                            <div class=\"col-xl-12 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"  [(ngModel)]=\"Address1\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Address 1\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\"  [(ngModel)]=\"Address2\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Address 2\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <input type=\"text\" [(ngModel)]=\"Region\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"State/Parish/Region\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <select [(ngModel)]=\"Country\"  [ngModelOptions]=\"{standalone: true}\" class=\"form-control  input-tp-1\">\r\n                                                      <option value=\"\" >Select Country</option>\r\n                                                      <option value=\"{{item.name}}\"  *ngFor=\"let item of countries\">{{item.name}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\" [ngClass]=\"(submited && form.controls['email'].invalid) ? 'mb-0':''\">\r\n                                                    <input name=\"email\" placeholder=\"Email Address\"  [(ngModel)]=\"Email\"    required type=\"text\" formControlName=\"email\" class=\"form-control input-tp-1\">\r\n                                                </div>\r\n                                                <div *ngIf=\"submited && form.controls['email'].invalid\" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Email is not valid</div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\" [ngClass]=\"(submited && form.controls['password'].invalid) ? 'mb-0':''\">\r\n                                                    <input name=\"password\" placeholder=\"Password\" [type]=\"pass ? 'text' : 'password'\"  [(ngModel)]=\"Password\" required  formControlName=\"password\" class=\"form-control input-tp-1\">                                                   \r\n                                                    <i class=\"fa  check-g\" [ngClass]=\"pass ? 'fa-eye-slash' : 'fa-eye'\" (click)=\"passwordhidden()\"></i>\r\n                                                </div>\r\n                                                <div *ngIf=\"submited && form.controls['password'].errors && form.controls['password'].errors.required\" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Password is required</div>\r\n                                                <div *ngIf=\"submited && form.controls['password'].hasError('minlength')\" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Must be at least 6 characters!</div>\r\n                                                <div *ngIf=\"submited && form.controls['password'].hasError('hasNumber') \" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Must have at least 1 number!</div>\r\n                                                <div *ngIf=\"submited && form.controls['password'].hasError('hasCapitalCase') \" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Must contain at least 1 in Capital Case!</div>\r\n                                                <div *ngIf=\"submited && form.controls['password'].hasError('hasSmallCase') \" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Must contain at least 1 Letter in Small Case!</div>\r\n                                                <div *ngIf=\"submited && form.controls['password'].hasError('hasSpecialCharacters') \" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Must contain at least 1 Special Character!</div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp\"  [ngClass]=\"((submited && form.controls['confirm_pass'].errors && form.controls['confirm_pass'].errors.required) || (submited && form.controls['confirm_pass'].errors && !form.controls['confirm_pass'].errors.required && form.controls['confirm_pass'].errors.mustMatch)) ? 'mb-0':''\">\r\n                                                    <input name=\"confirm_pass\" placeholder=\"Confirm Password\"  [type]=\"cpass ? 'text' : 'password'\" [(ngModel)]=\"ConfirmPassword\"   required  formControlName=\"confirm_pass\" class=\"form-control input-tp-1\">\r\n                                                    <i class=\"fa  check-g\" [ngClass]=\"cpass ? 'fa-eye-slash' : 'fa-eye'\" (click)=\"cpasswordhidden()\"></i>\r\n                                                </div>\r\n                                                <div *ngIf=\"submited && form.controls['confirm_pass'].errors && form.controls['confirm_pass'].errors.required\" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Confirm Password is required</div>\r\n                                                <div *ngIf=\"submited && form.controls['confirm_pass'].errors && !form.controls['confirm_pass'].errors.required && form.controls['confirm_pass'].errors.mustMatch\" class=\"alert-danger text-left\" style=\"font-size: 11px;\">Confirm Password is not matched</div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                                <div class=\"form-group input-rw-tp text-left\">\r\n                                                    <div class=\"checkbox mt-0\">\r\n                                                        <label class=\"fontsize-12 color666 fontfamily-medium\">\r\n                                                        <input type=\"checkbox\" name=\"remember\" value=\"\"  data-toggle=\"modal\" data-target=\".selectCatModal\">\r\n                                                        <span class=\"cr\">\r\n                                                          <i class=\"cr-icon fa fa-check\"></i>\r\n                                                        </span>\r\n                                                        I agree to the Entrypass  <a style=\"color:#007FFF\" data-toggle=\"modal\" data-target=\"#exampleModal\" class=\"colorblue1 text-underline\"> Terms & Conditions</a>\r\n                                                      </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 m-auto\">\r\n                                                <div class=\"form-group input-rw-tp mt-30 mb-0\">\r\n                                                    <button type=\"submit\" class=\"btn btn-large btn-rad-24\">Sign Up</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                                            <div class=\"modal-content\">                                           \r\n                                                <div class=\"modal-body\">\r\n                                                   <div class=\"mb-10\">\r\n                                                        <h4 class=\"fontsize-26  text-left fontfamily-bold colorblack text-uppercase mt-25 mb-10\">Terms of Use</h4>\r\n                                                    </div>\r\n                                                    <div class=\"mt-30 text-left\" [innerHtml]=\"TermsOfUse\">\r\n                                                    </div> \r\n                                                </div>\r\n                                           \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from 'src/app/services/apis.service';\r\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {  DatePipe } from '@angular/common';\r\nimport {FormGroup,FormControl,Validator,FormBuilder, Validators} from '@angular/forms';\r\nimport { CustomValidators } from 'src/app/custom-validators';\r\n@Component({\r\n  selector: 'app-basic-reg',\r\n  templateUrl: './basic-reg.component.html',\r\n  styleUrls: ['./basic-reg.component.scss']\r\n})\r\nexport class BasicRegComponent implements OnInit {\r\n\r\n  countries = [];\r\n  Country = \"\"\r\n  DefaultValue = \"\";\r\n  Name = \"\";\r\n  UserName = \"\";\r\n  BusinessRegister=\"\";\r\n  Gender = \"\";\r\n  Birthday =this.datePipe.transform(new Date(),\"yyyy-MM-dd\");\r\n  Phone = \"\";\r\n  Address1 = \"\";\r\n  Address2 = \"\";\r\n  Region = \"\";\r\n  Email = \"\";\r\n  Password = \"\";\r\n  ConfirmPassword=\"\";\r\n  submited = false;\r\n  TermsOfUse:\"\";\r\n  pass=false;\r\n  cpass=false;\r\n  constructor(\r\n    private api: ApisService,\r\n    private toastyService: ToastyService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private client:HttpClient,\r\n    private formbuilder:FormBuilder,\r\n    private datePipe:DatePipe\r\n  ) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n      this.getConfig();\r\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n    this.client.get('https://restcountries.eu/rest/v2/all').subscribe(data=>{         \r\n      for(let item in data)  {\r\n          this.countries.push(data[item]);\r\n          }\r\n          this.Country = \"Barbados\"\r\n          this.DefaultValue = \"1246\";\r\n      },error=>{\r\n          console.log(error)\r\n      })\r\n  }\r\n  form = this.formbuilder.group({\r\n      email:new FormControl(null,[Validators.email,Validators.required]),\r\n      password:new FormControl(null,[Validators.required,\r\n        CustomValidators.patternValidator(/\\d/, { hasNumber: true }),\r\n        CustomValidators.patternValidator(/[A-Z]/, { hasCapitalCase: true }),\r\n        CustomValidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\r\n        CustomValidators.patternValidator(/[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/, { hasSpecialCharacters: true }),\r\n        Validators.minLength(6)\r\n    \r\n    ]),\r\n      confirm_pass:new FormControl('',[Validators.required])\r\n  },{validators:this.mustmatch('password','confirm_pass')})\r\n\r\n  mustmatch(controlName:string,matchingControlName:string)\r\n  {\r\n      return (formGroup:FormGroup)=>\r\n      {\r\n          const control = formGroup.controls[controlName];\r\n          const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n          if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n              // return if another validator has already found an error on the matchingControl\r\n              return;\r\n          }\r\n\r\n          // set error on matchingControl if validation fails\r\n          if (control.value !== matchingControl.value) {\r\n              matchingControl.setErrors({ mustMatch: true });\r\n          } else {\r\n              matchingControl.setErrors(null);\r\n          }\r\n      }\r\n  }\r\n  passwordhidden(){\r\n    this.pass=!this.pass;\r\n  }\r\n  cpasswordhidden(){\r\n    this.cpass=!this.cpass;\r\n  }\r\n  getCountry()\r\n  {\r\n      for(let item in this.countries)\r\n      {\r\n          if(this.countries[item].callingCodes && this.countries[item].callingCodes[0] == this.DefaultValue)\r\n          {\r\n              return this.countries[item].flag;\r\n          }\r\n      }\r\n  }\r\n  getConfig(){\r\n    this.spinner.show();\r\n      this.api.getConfig().subscribe(res => {\r\n        this.spinner.hide();\r\n        var TermsOfUseData =res['result'].data.filter((element) => element.Item == 'Terms');\r\n        this.TermsOfUse=(TermsOfUseData) ? TermsOfUseData[0].Content :'';\r\n    }, err => {\r\n      this.spinner.hide();\r\n    });  \r\n  }\r\n  submit()\r\n    {\r\n     \r\n        this.submited = true;\r\n        if(this.form.invalid)\r\n        {\r\n            return;\r\n        }\r\n        var formdata={\r\n                    \r\n            Name : this.Name,\r\n            UserName : this.UserName,\r\n            Email : this.Email,\r\n            Password : this.Password,\r\n            Birthday : this.Birthday,\r\n            DefaultValue :this.DefaultValue,\r\n            Phone : this.Phone,          \r\n            Country : this.Country,  \r\n            Address1 : this.Address1,\r\n            Address2 : this.Address2,\r\n            Region : this.Region,\r\n            Role:\"business\",\r\n            Status:1,\r\n            BusinessRegister:this.BusinessRegister\r\n            \r\n        }\r\n        // console.log(formdata);\r\n        this.spinner.show();\r\n        this.api.signup(formdata).subscribe(res => {\r\n            this.spinner.hide();\r\n            if(res['result'].status==1){\r\n                this.api.alerts('Success', res['result'].message, 'success');\r\n                localStorage.setItem(\"Users\",JSON.stringify(res['result'].data)); \r\n                localStorage.setItem('loggedin',\"true\");\r\n                // this.router.navigate(['auth/subscription']);\r\n                if(localStorage.getItem('payplan')){\r\n                    window.location.href = './auth/payment';\r\n                }else{\r\n                    window.location.href = './auth/subscription';\r\n                }\r\n                \r\n            }else{\r\n                this.api.alerts('Error', res['result'].message, 'error');\r\n            }\r\n        }, err => {\r\n            this.spinner.hide();\r\n            console.log(err);\r\n        });\r\n       \r\n    } \r\n    \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BasicRegComponent } from './basic-reg.component';\r\nimport {BasicRegRoutingModule} from './basic-reg-routing.module';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BasicRegRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [BasicRegComponent]\r\n})\r\nexport class BasicRegModule { }\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport class CustomValidators {\n\n    static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } => {\n          if (!control.value) {\n            // if control is empty return no error\n            return null;\n          }\n      \n          // test the value of the control against the regexp supplied\n          const valid = regex.test(control.value);\n      \n          // if true, return no error (no error), else return error passed in the second parameter\n          return valid ? null : error;\n        };\n      }\n      static passwordMatchValidator(control: AbstractControl) {\n        const password: string = control.get('password').value; // get password from our password form control\n        const confirmPassword: string = control.get('confirmPassword').value; // get password from our confirmPassword form control\n        // compare is the password math\n        if (password !== confirmPassword) {\n          // if they don't match, set an error in our confirmPassword form control\n          control.get('confirmPassword').setErrors({ NoPassswordMatch: true });\n        }\n      }\n}\n"],"sourceRoot":"webpack:///"}