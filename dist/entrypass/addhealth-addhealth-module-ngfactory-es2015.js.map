{"version":3,"sources":["./src/app/addhealth/addhealth-routing.module.ts","./src/app/addhealth/addhealth.component.html","./src/app/addhealth/addhealth.component.ts","./src/app/addhealth/addhealth.module.ts"],"names":[],"mappings":"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","file":"addhealth-addhealth-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddhealthComponent } from './addhealth.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddhealthComponent,\r\n    data: {\r\n      breadcrumb: 'Health Organization'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddhealthRoutingModule { }\r\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\r\n    <p style=\"font-size: 20px; color: #e74c3c\">{{'Please wait...' | translate}}</p>\r\n</ngx-spinner>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">        \r\n        <div class=\"right-sidebar-content bgwhite boxshadow-2 border-radius8 pt-25 pb-25 pl-20 pr-20\">       \r\n        <div class=\"row my-5\">\r\n          <div class=\"col-xl-10 col-lg-10 offset-md-1 col-md-10 col-sm-12 col-12\">\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n                <fieldset>\r\n                    <legend *ngIf=\"new\">Create Health Organization Registration</legend>  \r\n                    <legend *ngIf=\"!new\">Edit Health Organization Registration</legend>  \r\n                    <div class=\"row px-3\">\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <input type=\"text\" name=\"\"  [(ngModel)]=\"Name\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Health Organization\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <input type=\"text\" name=\"\"  [(ngModel)]=\"UserName\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Contact Person\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row px-3\">\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp phone-o-field\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-xl-4 col-lg-5 col-md-12 col-sm-12 col-12 pr-0\">\r\n                                        <div class=\"relative\">\r\n                                            <select   [(ngModel)]=\"DefaultValue\" name=\"phonecode\"  [ngModelOptions]=\"{standalone: true}\" class=\"form-control input-tp-1\">\r\n                                                <option value=\"\" *ngFor=\"let item of countries\" value=\"{{item.callingCodes[0]}}\">\r\n                                                + {{item.callingCodes[0]}}({{item.name}})\r\n                                                </option>\r\n                                            </select>\r\n                                            <img [src]=\"getCountry()\" class=\"flag-img\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-xl-8 col-lg-7 col-md-12 col-sm-12 col-12\">\r\n                                        <input type=\"text\" name=\"\"   [(ngModel)]=\"Phone\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Phone Number\" class=\"form-control input-tp-1\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <input type=\"text\" name=\"\"  [(ngModel)]=\"PhoneExt\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Phone Ext.\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\" [ngClass]=\"(submited && form.controls['email'].invalid) ? 'mb-0':''\">\r\n                                <input name=\"email\" [readOnly]=\"!new\" placeholder=\"Email Address\"  [(ngModel)]=\"Email\"    required type=\"text\" formControlName=\"email\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                            <div *ngIf=\"submited && form.controls['email'].invalid\" class=\"alert-danger text-left\">Email is not valid</div>\r\n                        </div>\r\n\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <input type=\"date\" name=\"\"  [(ngModel)]=\"Birthday\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Date\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <input type=\"text\" name=\"\"  [(ngModel)]=\"Address1\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Address 1\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <input type=\"text\" name=\"\"  [(ngModel)]=\"Address2\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Address 2\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <input type=\"text\" name=\"\"   [(ngModel)]=\"Region\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"State/Parish/Region\" class=\"form-control input-tp-1\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\" *ngIf=\"muticountries.length>0\">\r\n                                <ng-multiselect-dropdown style=\"height:auto\"\r\n                                    [placeholder]=\"'Select County'\"\r\n                                    [class]=\"'form-control  input-tp-1'\"\r\n                                    [data]=\"muticountries\"\r\n                                    [(ngModel)]=\"Country\"\r\n                                    [ngModelOptions]=\"{standalone: true}\"\r\n                                    [settings]=\"dropdownSettings\"\r\n                                    (onSelect)=\"onItemSelect($event)\"\r\n                                    (onSelectAll)=\"onSelectAll($event)\"\r\n    >                          </ng-multiselect-dropdown>                           \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                            <div class=\"form-group input-rw-tp\">\r\n                                <select [(ngModel)]=\"Status\"  [ngModelOptions]=\"{standalone: true}\"   placeholder=\"Status\" class=\"form-control  input-tp-1\">\r\n                                    <option value=\"\" >Select Status</option>\r\n                                    <option value=\"1\" >Active</option>\r\n                                    <option value=\"0\">Non Active</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <div class=\"mt-40\">\r\n                    <div class=\"\">\r\n                        <button type=\"button\" class=\"btn btn-gray width150 btn-rad-24\" (click)=\"back()\">Cancel</button>\r\n                        <span class=\"ml-15\"><button type=\"submit\" class=\"btn width150 btn-rad-24\"  *ngIf=\"new\">Save</button></span>\r\n                        <span class=\"ml-15\"><button type=\"submit\" class=\"btn width150 btn-rad-24\"  *ngIf=\"!new\">Update</button></span>\r\n                    </div>\r\n                </div>\r\n              </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n<ng2-toasty></ng2-toasty>","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location, DatePipe } from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {FormGroup,FormControl,Validator,FormBuilder, Validators} from '@angular/forms';\r\n@Component({\r\n  selector: 'addhealth',\r\n  templateUrl: './addhealth.component.html',\r\n  styleUrls: ['./addhealth.component.css']\r\n})\r\nexport class AddhealthComponent implements OnInit {\r\n  new: boolean;\r\n  id: any;\r\n  countries = [];\r\n  muticountries=[];\r\n  Name = \"\"\r\n  UserName = \"\";\r\n  DefaultValue = \"1246\";\r\n  Phone = \"\";\r\n  PhoneExt = \"\";\r\n  Email = \"\";\r\n  Birthday = \"\";\r\n  Address1 = \"\";\r\n  Address2 = \"\";\r\n  Region = \"\";\r\n  Country = [];\r\n  Status = \"\";\r\n  submited = false;\r\n  dropdownSettings: any = {};\r\n  public  date_format = 'yyyy-MM-DD';\r\n  constructor(\r\n    private api: ApisService,\r\n    private route: ActivatedRoute,\r\n    private navCtrl: Location,\r\n    private client:HttpClient,\r\n    private formbuilder:FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private datePipe: DatePipe,\r\n  ) { \r\n    this.route.queryParams.subscribe(data => {\r\n      this.new = data.register === 'true' ? true : false;\r\n      if (data && data.id) {\r\n        this.id = data.id;\r\n        this.getBusiness(data.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {    \r\n    this.client.get('https://restcountries.eu/rest/v2/all').subscribe(data=>{         \r\n      for(let item in data)  {\r\n          var element={\r\n            name:data[item].name\r\n          }\r\n          this.muticountries.push(element);\r\n          this.countries.push(data[item]);\r\n          }    \r\n      },error=>{\r\n          console.log(error)\r\n      }) \r\n      this.dropdownSettings = {\r\n        singleSelection: false,\r\n        idField: 'name',\r\n        textField: 'name',\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        allowSearchFilter: true\r\n     };\r\n  }\r\n  \r\n  form = this.formbuilder.group({\r\n    email:new FormControl('',[Validators.email,Validators.required])\r\n  })\r\n  getCountry()\r\n  {\r\n      for(let item in this.countries)\r\n      {\r\n          if(this.countries[item].callingCodes && this.countries[item].callingCodes[0] == this.DefaultValue)\r\n          {\r\n              return this.countries[item].flag;\r\n          }\r\n      }\r\n  }\r\n  getBusiness(id) {\r\n    this.spinner.show();\r\n      this.api.getHealth(id).subscribe(res => {\r\n        this.spinner.hide();\r\n        if(res['result'].status==1){\r\n          this.Name = res['result'].data.Name;\r\n          this.UserName = res['result'].data.UserName;\r\n          this.DefaultValue = res['result'].data.DefaultValue;\r\n          this.Phone = res['result'].data.Phone;\r\n          this.PhoneExt = res['result'].data.PhoneExt;\r\n          this.Email = res['result'].data.Email;\r\n          this.Birthday = this.datePipe.transform(new Date(res['result'].data.Birthday),\"yyyy-MM-dd\");        \r\n          this.Address1 = res['result'].data.Address1;\r\n          this.Address2 = res['result'].data.Address2;\r\n          this.Region = res['result'].data.Region;\r\n          this.Country = JSON.parse(res['result'].data.Country);\r\n          this.Status=res['result'].data.Status;\r\n        }\r\n              \r\n    }, err => {\r\n      this.spinner.hide();\r\n    });   \r\n  }  \r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n  submit()\r\n  {\r\n   \r\n      this.submited = true;\r\n      if(this.form.invalid)\r\n      {\r\n          return;\r\n      }\r\n      if(this.new){\r\n          var formdata={    \r\n            Name : this.Name,\r\n            UserName : this.UserName,\r\n            DefaultValue : this.DefaultValue,\r\n            Phone : this.Phone,\r\n            PhoneExt : this.PhoneExt,\r\n            Email :this.Email,\r\n            Birthday : this.Birthday,\r\n            Address1 : this.Address1,\r\n            Address2 : this.Address2,  \r\n            Region : this.Region,\r\n            Country : JSON.stringify(this.Country),\r\n            Status : this.Status, \r\n            Role:'health'          \r\n        }\r\n        this.spinner.show();\r\n        this.api.AddHealth(formdata).subscribe(res => {\r\n            this.spinner.hide();\r\n            if(res['result'].status==1){\r\n              this.api.alerts('Success', res['result'].message, 'success');                \r\n              this.navCtrl.back();\r\n            }else if(res['result'].status==0){\r\n              this.api.alerts('Error', res['result'].message, 'error');\r\n            }\r\n                  \r\n        }, err => {\r\n          this.spinner.hide();\r\n        });          \r\n          \r\n      }else{\r\n          {\r\n            var formdataa={  \r\n              Id:this.id,  \r\n              Name : this.Name,\r\n              UserName : this.UserName,\r\n              DefaultValue : this.DefaultValue,\r\n              Phone : this.Phone,\r\n              PhoneExt : this.PhoneExt,\r\n              Email :this.Email,\r\n              Birthday : this.Birthday,\r\n              Address1 : this.Address1,\r\n              Address2 : this.Address2,  \r\n              Region : this.Region,\r\n              Country : JSON.stringify(this.Country),\r\n              Status : this.Status,  \r\n              Role:'health'         \r\n          }\r\n          this.spinner.show();\r\n            this.api.UpdateHealth(formdataa).subscribe(res => {\r\n              this.spinner.hide();\r\n              if(res['result'].status==1){\r\n                this.api.alerts('Success', res['result'].message, 'success');\r\n                this.navCtrl.back();\r\n              }\r\n                    \r\n          }, err => {\r\n            this.spinner.hide();\r\n          });  \r\n            \r\n        }\r\n      }\r\n  }\r\n\r\n  back(){\r\n    this.navCtrl.back();\r\n  }\r\n \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddhealthRoutingModule } from './addhealth-routing.module';\r\nimport { AddhealthComponent } from './addhealth.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n\r\n@NgModule({\r\n  declarations: [AddhealthComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddhealthRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ]\r\n})\r\nexport class AddhealthModule { }\r\n"],"sourceRoot":"webpack:///"}