{"version":3,"sources":["./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACE;WAM/C;IACJ,UAAU,EAAE,qBAAqB;CAClC;AANL,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAkB;QAC7B,IAAI,IAEH;KACF;CACF,CAAC;AAMK,MAAM,sBAAsB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCJf,+bAA6F,IACzF,0HAAO,KACH,uHAAI,KACA,8IAAwB,KACxB,8IAAwB,kFAAK,MAC7B,sHAAI,gGAAmB,MACvB,8IAAwB,2FAAc,MACtC,+IAAwB,uFAAU,MAClC,+IAAwB,qFAAQ,MAChC,+IAAwB,iFAAI,MAC5B,6IAAsB,qFAAQ,MAC9B,+IAAwB,mFAAM,mDAXC,mBAAuB,YAAlE,YAA6F,EAAlD,SAAuB;wGA8B1D,uHAAiD,KAC7C,uHAAI,KACA,uhCAAoD,MAChD;;;;;;;;;;;;;;;2iBAAgK,wJAA4B,KAC5L;;;;;;;;;;;;;;;;;;+VAA6H,MACzH,6NAAgF,YAA9B;;wBAA6B;MAA/E,wBAAgF,qJAAyB,KAAI,4EAAI,MACjH,6NAAgF,YAA9B;;wBAA6B;MAA/E,wBAAgF,8IAAkB,KAAI,qFAAa,MAI/H,+IAAwB,iFAAS,MACjC,uHAAI,iFAAa,MACjB,6IAAsB,iFAAiB,MACvC,+IAAwB,4FAAuD,MAC/E,+IAAwB,iFAAc,MACtC,+IAAwB,8IAAqC,IAC7D,+IAAwB,iFAAiB,MACzC,+IAAwB,iFAA4C,yDAfhE,2GAAoD,GAChD,oHAAgK,GAChK,wPAA6H,GAM7G,gEAAS,GAC7B,mEAAa,GACK,uEAAiB,GACf,8LAAuD,GACvD,sEAAc,GACd,yPAAqC,GACrC,yEAAiB,GACjB,0GAA4C;wGAlB5E,yHAAgC,KAC5B,odAAiD,iDAA7C,mBAA4C,UAAhD,YAAiD,EAA7C,SAA4C;wGAfxD,+bAA4F,IACxF,0HAAO,KACH,uHAAI,KACA,8IAAwB,KACxB,8IAAwB,kFAAK,MAC7B,sHAAI,gGAAmB,MACvB,8IAAwB,2FAAc,MACtC,+IAAwB,uFAAU,MAClC,+IAAwB,qFAAQ,MAChC,+IAAwB,iFAAI,MAC5B,6IAAsB,qFAAQ,MAC9B,+IAAwB,mFAAM,MAGtC,4YAAgC,iDAdO,mBAAuB,YAAlE,YAA4F,EAAjD,SAAuB,GAcvD,uCAAwB,GAA/B,aAAgC,EAAzB,SAAwB;oRA3C3D,wIAAiB,KACb,8IAAuB,KACnB,mMAA4E,KACxE,qIAAc,KACV,iKAA2C,KACvC,iLAA2D,6GAAgC,MAC3F,2IAAqB,KACjB,yOAAkF,YAAnB;;wBAAkB;MAAjF,wBAAkF,oFAAO,MACzF,2IAAoB,sPAAyF,YAAnE;;wBAAwB;MAA9C,wBAAyF,oFAAO,MAI5H,wIAAiB,KACb,qJAA8B,KAC1B,4YAA6F,IAe7F,4YAA4F,iDAfzB,wCAAyB,GAA5F,aAA6F,EAA1B,SAAyB,GAezB,uCAAwB,GAA3F,aAA4F,EAAzB,SAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BnH;AAAA;AAAA;AAAkD;AAa3C,MAAM,kBAAkB;IAI7B,YACU,GAAgB,EAChB,OAA0B,EAC1B,MAAc;QAFd,QAAG,GAAH,GAAG,CAAa;QAChB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QANxB,YAAO,GAAE,EAAE,CAAC;QACJ,gBAAW,GAAG,YAAY,CAAC;QACnC,cAAS,GAAwB,EAAE,CAAC;IAQpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG;gBACf,UAAU,EAAE,EAAE;gBACd,YAAY,EAAC,KAAK;gBAClB,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAC,IAAI;gBACd,IAAI,EAAC,KAAK;aAEX,CAAC;QACN,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,MAAM,OAAO,GAAqB;YAChC,WAAW,EAAE;gBACX,QAAQ,EAAE,IAAI;aACf;SACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC;IACD,UAAU,CAAC,EAAE;QACP,MAAM,OAAO,GAAqB;YAChC,WAAW,EAAE;gBACX,EAAE,EAAE,EAAE;gBACN,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IACD,UAAU,CAAC,EAAE;QACX,MAAM,OAAO,GAAqB;YAChC,WAAW,EAAE;gBACX,EAAE,EAAE,EAAE;aACP;SACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,MAAM;QACA,IAAI,UAAU,GAAC,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,OAAO,GAAC,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACnC,OAAO,IAAE,CAAC,CAAC,IAAI,GAAC,GAAG,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,IAAI,GAAG,GAAC;gBACN,qBAAqB,EAAC,GAAG,CAAC,IAAI;gBAC9B,gBAAgB,EAAC,GAAG,CAAC,QAAQ;gBAC7B,OAAO,EAAC,GAAG,CAAC,KAAK;gBACjB,MAAM,EAAC,GAAG,CAAC,QAAQ;gBACnB,OAAO,EAAC,GAAG,GAAC,GAAG,CAAC,YAAY,GAAC,GAAG,GAAC,GAAG,CAAC,QAAQ,GAAC,GAAG,GAAC,GAAG,CAAC,KAAK;gBAC3D,SAAS,EAAC,OAAO;gBACjB,UAAU,EAAC,GAAG,CAAC,QAAQ;gBACvB,UAAU,EAAC,GAAG,CAAC,QAAQ;gBACvB,QAAQ,EAAC,GAAG,CAAC,MAAM;gBACnB,eAAe,EAAC,GAAG,CAAC,QAAQ;gBAC5B,QAAQ,EAAC,CAAC,GAAG,CAAC,MAAM,IAAE,CAAC,CAAC,EAAC,SAAQ,EAAC,aAAY;aAC/C;YACD,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,QAAQ,GAAC,qBAAqB,CAAC;QACnC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,qBAAqB,EAAC,gBAAgB,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,SAAS,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,eAAe,EAAC,QAAQ,CAAC,CAAC,CAAC;QAC/K,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,yBAAyB,EAAE,CAAC,CAAC;QAC/E,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,eAAe,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAEjH,IAAI,eAAe,EAAE;YACjB,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAC7C;QACG,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACnC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,GAAG,MAAM,CAAC,CAAC;QACrD,QAAQ,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IACC,YAAY,CAAC,QAAQ,EAAE,UAAU;QAE7B,IAAI,KAAK,GAAG,OAAO,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC1E,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,GAAG,OAAO,CAAC;QAClB,KAAK,IAAI,KAAK,IAAI,UAAU,EAAE;YAC1B,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;SAClC;QACD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvB,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC;YACpB,KAAK,IAAI,KAAK,IAAI,UAAU,EAAE;gBAC1B,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAClC;YACD,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC;SACtB;QACF,OAAO,GAAG,CAAC;IACf,CAAC;CAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHD;AAAA;AAAO,MAAM,eAAe;CAAI","file":"dashboard-dashboard-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {DashboardComponent} from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    data: {\r\n      breadcrumb: 'Health Organization'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"right-sidebar-content mt-40 bgwhite boxshadow-2 border-radius8\">\r\n            <div class=\"\">\r\n                <div class=\"d-flex pt-0 pb-15 pl-20 pr-20\">\r\n                    <div class=\"ttle-h fontsize-14 fontfamily-medium color333\">Health Organization Registration</div>\r\n                    <div class=\"ml-auto\">\r\n                        <button class=\"btn widthfit btn-border-b btn-rad-24 btn-small\" (click)=\"export()\">Export </button>\r\n                        <span class=\"ml-20\"><button type=\"button\" (click)=\"createhealth()\" class=\"btn btn-rad-24 widthfit btn-small\">Add New</button></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-3\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\" *ngIf=\"healths.length==0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\"></th>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th>Health Organization</th>\r\n                                    <th class=\"text-center\">Contact Person</th>\r\n                                    <th class=\"text-center\">Mobile No.</th>\r\n                                    <th class=\"text-center\">Email ID</th>\r\n                                    <th class=\"text-center\">Date</th>\r\n                                    <th class=\"text-left\">Location</th>\r\n                                    <th class=\"text-center\">Status</th>\r\n                                </tr>\r\n                            </thead>                        \r\n                        </table>\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\" *ngIf=\"healths.length>0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\"></th>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th>Health Organization</th>\r\n                                    <th class=\"text-center\">Contact Person</th>\r\n                                    <th class=\"text-center\">Mobile No.</th>\r\n                                    <th class=\"text-center\">Email ID</th>\r\n                                    <th class=\"text-center\">Date</th>\r\n                                    <th class=\"text-left\">Location</th>\r\n                                    <th class=\"text-center\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"healths.length>0\">\r\n                                <tr *ngFor=\"let item of healths; let i = index;\">\r\n                                    <td>\r\n                                        <div ngbDropdown class=\"dropdown tbl-dropdown open\">\r\n                                            <button ngbDropdownToggle class=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdown1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\"><i class=\"fa fa-ellipsis-h\"></i></button>\r\n                                            <div ngbDropdownMenu class=\"dropdown-menu\" aria-labelledby=\"dropdown1\" data-dropdown-in=\"fadeIn\" data-dropdown-out=\"fadeOut\">\r\n                                                <a class=\"dropdown-item waves-light waves-effect\" (click)=\"editHealth(item.Id)\"><i class=\"ti-pencil-alt\"></i>Edit</a>\r\n                                                <a class=\"dropdown-item waves-light waves-effect\" (click)=\"viewHealth(item.Id)\"><i class=\"ti-eye\"></i>Audit Details</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"text-center\">{{i + 1}}</td>\r\n                                    <td>{{item.Name}}</td>\r\n                                    <td class=\"text-left\">{{item.UserName}}</td>\r\n                                    <td class=\"text-center\">+{{item.DefaultValue}} {{item.PhoneExt}}-{{item.Phone}}</td>\r\n                                    <td class=\"text-center\">{{item.Email}}</td>\r\n                                    <td class=\"text-center\">{{item.Birthday | date: date_format}}</td>\r\n                                    <td class=\"text-center\">{{item.Address1}}</td>\r\n                                    <td class=\"text-center\">{{(item.Status==1)? \"Active\" :\"Not Active\"}}</td>\r\n                                </tr>                            \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport Swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: [\r\n    './dashboard.component.scss'\r\n  ],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  healths= [];\r\n  public  date_format = 'd MMM yyyy';\r\n  dtOptions: DataTables.Settings = {};\r\n  constructor(\r\n    private api: ApisService,\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router\r\n  ) {\r\n    \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.gethealthslist();\r\n    \r\n  }\r\n\r\n  gethealthslist(){\r\n    this.spinner.show();\r\n      this.api.HealthList().subscribe(res => {\r\n        this.spinner.hide();\r\n        this.healths=res['result'].data;   \r\n        this.dtOptions = {\r\n          pageLength: 10,\r\n          lengthChange:false,\r\n          processing: true,\r\n          searching:true,\r\n          info:false,\r\n          \r\n        };    \r\n    }, err => {\r\n      this.spinner.hide();\r\n    });  \r\n  }\r\n  createhealth(){\r\n    const navData: NavigationExtras = {\r\n      queryParams: {\r\n        register: true\r\n      }\r\n    };\r\n    this.router.navigate(['addhealth'], navData);\r\n  }\r\n  editHealth(id){  \r\n        const navData: NavigationExtras = {\r\n          queryParams: {\r\n            id: id,\r\n            register: false\r\n          }\r\n        };\r\n        this.router.navigate(['addhealth'], navData);\r\n  }\r\n  viewHealth(id){\r\n    const navData: NavigationExtras = {\r\n      queryParams: {\r\n        id: id\r\n      }\r\n    };\r\n    this.router.navigate(['healthdetail'], navData);\r\n  }\r\n  \r\n  export(){\r\n        var exportdata=[];\r\n        this.healths.forEach(obj => {\r\n           console.log(obj);\r\n           var country=\"\";\r\n           JSON.parse(obj.Country).forEach(b => {\r\n            country+=b.name+\" \";\r\n           });\r\n           var ele={\r\n             \"Health Organization\":obj.Name,\r\n             \"Contact Person\":obj.UserName,\r\n             \"Email\":obj.Email,\r\n             \"Date\":obj.Birthday,\r\n             \"Phone\":\"+\"+obj.DefaultValue+\" \"+obj.PhoneExt+\"-\"+obj.Phone,\r\n             \"Country\":country,\r\n             \"Address1\":obj.Address1,\r\n             \"Address2\":obj.Address2,\r\n             \"Region\":obj.Region,\r\n             \"Registed Date\":obj.CreateAt,\r\n             \"Status\":(obj.Status==1)?\"Active\":\"Not Active\"\r\n           }\r\n           exportdata.push(ele);\r\n        });\r\n        var filename=\"Health Organization\";\r\n        let csvData = this.ConvertToCSV(exportdata, ['Health Organization','Contact Person','Email','Date','Phone','Country','Address1','Address2','Region','Registed Date','Status']);\r\n        let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n        let dwldLink = document.createElement(\"a\");\r\n        let url = URL.createObjectURL(blob);\r\n        let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n\r\n        if (isSafariBrowser) {  \r\n            dwldLink.setAttribute(\"target\", \"_blank\");\r\n        }\r\n            dwldLink.setAttribute(\"href\", url);\r\n            dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n            dwldLink.style.visibility = \"hidden\";\r\n            document.body.appendChild(dwldLink);\r\n            dwldLink.click();\r\n            document.body.removeChild(dwldLink);\r\n    }\r\n      ConvertToCSV(objArray, headerList) {\r\n\r\n          let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n          let str = '';\r\n          let row = 'S.No,';\r\n          for (let index in headerList) {\r\n              row += headerList[index] + ',';\r\n          }\r\n          row = row.slice(0, -1);\r\n          str += row + '\\r\\n';\r\n          for (let i = 0; i < array.length; i++) {\r\n              let line = (i+1)+'';\r\n              for (let index in headerList) {\r\n                  let head = headerList[index];\r\n                  line += ',' + array[i][head];\r\n            }\r\n            str += line + '\\r\\n';\r\n          }\r\n         return str;\r\n     }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgxSkeletonLoaderModule\r\n  ],\r\n  declarations: [DashboardComponent]\r\n})\r\nexport class DashboardModule { }\r\n"],"sourceRoot":"webpack:///"}