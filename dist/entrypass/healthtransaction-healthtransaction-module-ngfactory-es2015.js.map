{"version":3,"sources":["./src/app/healthtransaction/healthtransaction-routing.module.ts","./src/app/healthtransaction/healthtransaction.component.html","./src/app/healthtransaction/healthtransaction.component.ts","./src/app/healthtransaction/healthtransaction.module.ts"],"names":[],"mappings":"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","file":"healthtransaction-healthtransaction-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HealthtransactionComponent} from './healthtransaction.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HealthtransactionComponent,\r\n    data: {\r\n      breadcrumb: 'Transaction'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HealthtransactionRoutingModule { }\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"right-sidebar-content mt-40 bgwhite boxshadow-2 border-radius8\">\r\n            <div class=\"\">\r\n                <div class=\"pt-0 pb-15 pl-20 pr-20 row\">\r\n                    <div class=\"col-md-3\">\r\n                        <div class=\"ttle-h fontsize-14 fontfamily-medium color333\">Transaction</div>\r\n                    </div>\r\n                    <div class=\"col-md-6 px-3\">\r\n                            <ng-multiselect-dropdown style=\"height: auto;\"\r\n                                [placeholder]=\"'Select County'\"\r\n                                [class]=\"'form-control  input-tp-1'\"\r\n                                [data]=\"muticountries\"\r\n                                (ngModelChange)=\"changecountry($event)\"\r\n                                [(ngModel)]=\"selectedcoutries\"\r\n                                [ngModelOptions]=\"{standalone: true}\"\r\n                                [settings]=\"dropdownSettings\">          \r\n                            </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-md-3 text-right\">\r\n                        <button class=\"btn  btn-border-b btn-rad-24 btn-small\" (click)=\"export()\" style=\"width: 160px;margin-bottom: 10px;\">PDF Export</button><br>\r\n                        <button class=\"btn  btn-border-b btn-rad-24 btn-small\" (click)=\"csvexport()\" style=\"width: 160px;margin-bottom: 10px;\">Excel Export</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-3\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\"  *ngIf=\"alltransaction.length==0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th class=\"text-center\">Visitor Name</th>                                    \r\n                                    <th class=\"text-center\">User Name</th>\r\n                                    <th class=\"text-center\">Gender</th>\r\n                                    <th class=\"text-center\">Contact number</th>\r\n                                    <th class=\"text-center\">Type of ID</th>\r\n                                    <th class=\"text-center\">DOB </th>\r\n                                    <th class=\"text-center\">Business name</th>\r\n                                    <th class=\"text-center\">Location</th>\r\n                                    <th class=\"text-center\">Date</th>\r\n                                    <th class=\"text-center\">Time</th>\r\n                                    <th class=\"text-center\">Check Status</th>\r\n                                    <th class=\"text-center\">Measures Unit</th>\r\n                                    <th class=\"text-center\">Measures Value</th>\r\n                                    <th class=\"text-center\">User (who scanned)</th>\r\n                                </tr>\r\n                            </thead>                        \r\n                        </table>\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\"  *ngIf=\"alltransaction.length>0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th class=\"text-center\">Visitor Name</th>                                    \r\n                                    <th class=\"text-center\">User Name</th>\r\n                                    <th class=\"text-center\">Gender</th>\r\n                                    <th class=\"text-center\">Contact number</th>\r\n                                    <th class=\"text-center\">Type of ID</th>\r\n                                    <th class=\"text-center\">DOB </th>\r\n                                    <th class=\"text-center\">Business name</th>\r\n                                    <th class=\"text-center\">Location</th>\r\n                                    <th class=\"text-center\">Date</th>\r\n                                    <th class=\"text-center\">Time</th>\r\n                                    <th class=\"text-center\">Check Status</th>\r\n                                    <th class=\"text-center\">Measures Unit</th>\r\n                                    <th class=\"text-center\">Measures Value</th>\r\n                                    <th class=\"text-center\">User (who scanned)</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let item of alltransaction; let i = index;\">\r\n                                    <td class=\"text-center\">{{i+1}}</td>\r\n                                    <td class=\"text-center\">{{item.visitor_name}}</td>\r\n                                    <td class=\"text-center\">{{item.Username}}</td>                                    \r\n                                    <td class=\"text-center\">{{item.Gender}}</td>\r\n                                    <td class=\"text-center\">+{{item.DefaultValue}} {{item.Phone}}</td>\r\n                                    <td class=\"text-center\">{{item.TypeId}}: {{item.IdNumber}}</td>\r\n                                    <td class=\"text-center\">{{item.Birthday | date: date_format}}</td>\r\n                                    <td class=\"text-center\" style=\"font-weight: bold;\">{{item.Businessname}}</td>\r\n                                    <td class=\"text-center\">{{item.BusinessCountry}}, {{item.Address1}}</td>\r\n                                    <td class=\"text-center\">{{item.MeasuresDate | date: date_format}}</td>\r\n                                    <td class=\"text-center\">{{item.MeasuresDate | date: time_format}}</td>\r\n                                    <td class=\"text-center\">{{item.CheckStatus}}</td>  \r\n                                    <td class=\"text-center\">{{item.Measuresunit}}</td>\r\n                                    <td class=\"text-center\">{{item.MeasuresValue}}</td>                                 \r\n                                    <td class=\"text-center\">{{item.Scanedname}}</td>\r\n                                </tr>                            \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport * as jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n@Component({\r\n  selector: 'app-healthtransaction',\r\n  templateUrl: './healthtransaction.component.html',\r\n  styleUrls: [\r\n    './healthtransaction.component.scss'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HealthtransactionComponent implements OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  alltransaction:any[] = [];\r\n  alldata:any[] = [];\r\n  muticountries:any[] = [];\r\n  selectedcoutries:any[] = [];\r\n  dropdownSettings: any = {};\r\n  public  date_format = 'd MMM yyyy';\r\n  public  time_format = 'h.mm a';\r\n\r\n  head = [['ID','Visitor Name','User Name','Gender','Contact number','Type of ID','DOB','Business name', 'Location','Date','Time','Check Status','Measures Unit','Measures Value','User (who scanned)']]\r\n\r\n  \r\n  constructor(\r\n    private api: ApisService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n      this.GetHealthTransaction();\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      // pagingType: 'full_numbers',\r\n      pageLength: 10,\r\n      lengthChange:false,\r\n      processing: true,\r\n      searching:true,\r\n      info:false,\r\n      \r\n    };\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'name',\r\n      textField: 'name',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true\r\n   };\r\n  }\r\n  GetHealthTransaction(){\r\n    var userdata = localStorage.getItem('Users');\r\n    var user=JSON.parse(userdata);\r\n    \r\n    this.spinner.show();\r\n      this.api.GetHealthTransaction(user.Id).subscribe(res => {\r\n        this.spinner.hide();\r\n        this.alltransaction=res['result'].data;  \r\n        this.alldata=res['result'].data; \r\n        this.muticountries=JSON.parse(user.Country);\r\n        this.selectedcoutries=JSON.parse(user.Country); \r\n    }, err => {\r\n      this.spinner.hide();\r\n    });  \r\n    \r\n  }\r\n  async changecountry(event){\r\n    var alldata=this.alldata;\r\n    var searchdata=[];\r\n    event.forEach(function (value) { \r\n      var ele =alldata.filter((element) => element.BusinessCountry == value.name);\r\n      searchdata=searchdata.concat(ele);\r\n    }); \r\n    this.alltransaction=searchdata;\r\n    // console.log(searchdata);\r\n  }\r\n  export() {\r\n    var exportdata=[];\r\n    this.alltransaction.forEach((obj, key) => {      \r\n       var ele=[\r\n         key+1,\r\n         obj.visitor_name,\r\n         obj.Username,\r\n         obj.Gender,\r\n         \"+\"+obj.DefaultValue+\" \"+obj.Phone,\r\n         obj.TypeId+ \":\"+obj.IdNumber,\r\n         this.datePipe.transform(new Date(obj.Birthday),\"d MMM yyyy\"),\r\n         obj.Businessname,\r\n         obj.BusinessCountry + \" \"+obj.Address1,\r\n         this.datePipe.transform(new Date(obj.MeasuresDate),\"d MMM yyyy\"),\r\n         this.datePipe.transform(new Date(obj.MeasuresDate),\"h.mm a\"),\r\n         obj.CheckStatus,\r\n         obj.Measuresunit,\r\n         obj.MeasuresValue,\r\n         obj.Scanedname,\r\n       ]\r\n       exportdata.push(ele);\r\n    });\r\n    var doc = new jsPDF('landscape');\r\n\r\n    doc.setFontSize(18);\r\n    doc.text('Transaction', 140, 12);\r\n    doc.setFontSize(9);\r\n    doc.setTextColor(100);\r\n\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: exportdata,\r\n      // theme: 'plain',\r\n      didDrawCell: data => {\r\n        console.log(data.column.index)\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Health Transaction.pdf');\r\n  }\r\n  replaceAll(str, find, replace) {\r\n    var escapedFind=find.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n      return str.replace(new RegExp(escapedFind, 'g'), replace);\r\n  }\r\n  csvexport(){\r\n    var exportdata=[];\r\n    this.alltransaction.forEach(obj => { \r\n        var location= obj.Address1+\" \"+obj.Address2+\" \"+obj.BusinessCountry;  \r\n        var visit_location= obj.visitor_address1+\" \"+obj.visitor_address2+\" \"+obj.visitor_region+\" \"+obj.visitor_country;   \r\n        var ele={\r\n          \"Visitor Name\":obj.visitor_name,\r\n          \"Visitor Email\":obj.Email,\r\n          \"ExpressId\":obj.ExpressId,\r\n          \"Visitor Location\":this.replaceAll(visit_location, \",\", \" \"),\r\n          \"User Name\":obj.Username,\r\n          \"Gender\":obj.Gender,\r\n          \"Contact number\": \"+\"+obj.DefaultValue+\" \"+obj.Phone,\r\n          \"Type of ID\":obj.TypeId+ \":\"+obj.IdNumber,\r\n          \"DOB\":this.datePipe.transform(new Date(obj.Birthday),\"d MMM yyyy\"),\r\n          \"Social Circles\":this.replaceAll(JSON.stringify(obj.socialdata), \",\", \" \"),\r\n          \"Business name\":obj.Businessname,  \r\n          \"Business Reg/ Company No\":(obj.BusinessRegister) ? obj.BusinessRegister :\"\",         \r\n          \"Location\":this.replaceAll(location, \",\", \" \"), \r\n          \"Date\":this.datePipe.transform(new Date(obj.MeasuresDate),\"d MMM yyyy\"),\r\n          \"Time\":this.datePipe.transform(new Date(obj.MeasuresDate),\"h.mm a\"),  \r\n          \"Check Status\":obj.CheckStatus, \r\n          \"Measures Unit\":obj.Measuresunit, \r\n          \"Measures Value\":obj.MeasuresValue,  \r\n          \"User (who scanned)\":obj.Scanedname,     \r\n        }\r\n        exportdata.push(ele);\r\n      });\r\n      var filename=\"Health Transaction\";\r\n      let csvData = this.ConvertToCSV(exportdata, ['Visitor Name','Visitor Email','ExpressId','Visitor Location','User Name','Gender','Contact number','Type of ID','DOB',\"Social Circles\",'Business name','Business Reg/ Company No','Location','Date','Time','Check Status','Measures Unit','Measures Value','User (who scanned)']);\r\n      let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n      let dwldLink = document.createElement(\"a\");\r\n      let url = URL.createObjectURL(blob);\r\n      let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n  \r\n      if (isSafariBrowser) {  \r\n          dwldLink.setAttribute(\"target\", \"_blank\");\r\n      }\r\n          dwldLink.setAttribute(\"href\", url);\r\n          dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n          dwldLink.style.visibility = \"hidden\";\r\n          document.body.appendChild(dwldLink);\r\n          dwldLink.click();\r\n          document.body.removeChild(dwldLink);\r\n    }\r\n    ConvertToCSV(objArray, headerList) {\r\n  \r\n        let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n        let str = '';\r\n        let row = 'S.No,';\r\n        for (let index in headerList) {\r\n            row += headerList[index] + ',';\r\n        }\r\n        row = row.slice(0, -1);\r\n        str += row + '\\r\\n';\r\n        for (let i = 0; i < array.length; i++) {\r\n            let line = (i+1)+'';\r\n            for (let index in headerList) {\r\n                let head = headerList[index];\r\n                line += ',' + array[i][head];\r\n          }\r\n          str += line + '\\r\\n';\r\n        }\r\n      return str;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HealthtransactionRoutingModule } from './healthtransaction-routing.module';\r\nimport { HealthtransactionComponent } from './healthtransaction.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HealthtransactionRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgxSkeletonLoaderModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n  declarations: [HealthtransactionComponent]\r\n})\r\nexport class HealthtransactionModule { }\r\n"],"sourceRoot":"webpack:///"}