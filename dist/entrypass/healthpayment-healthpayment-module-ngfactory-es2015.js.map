{"version":3,"sources":["./src/app/healthpayment/healthpayment-routing.module.ts","./src/app/healthpayment/healthpayment.component.html","./src/app/healthpayment/healthpayment.component.ts","./src/app/healthpayment/healthpayment.module.ts"],"names":[],"mappings":"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","file":"healthpayment-healthpayment-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HealthpaymentComponent} from './healthpayment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HealthpaymentComponent,\r\n    data: {\r\n      breadcrumb: 'Transaction'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HealthpaymentRoutingModule { }\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"right-sidebar-content mt-40 bgwhite boxshadow-2 border-radius8\">\r\n            <div class=\"\">\r\n                <div class=\"d-flex pt-0 pb-15 pl-20 pr-20\">\r\n                    <div class=\"ttle-h fontsize-14 fontfamily-medium color333\">Transaction</div>\r\n                    <div class=\"ml-auto\">                        \r\n                        <ng-multiselect-dropdown\r\n                            [placeholder]=\"'Select County'\"\r\n                            [class]=\"'form-control  input-tp-1'\"\r\n                            [data]=\"muticountries\"\r\n                            (ngModelChange)=\"changecountry($event)\"\r\n                            [(ngModel)]=\"selectedcoutries\"\r\n                            [ngModelOptions]=\"{standalone: true}\"\r\n                            [settings]=\"dropdownSettings\">          \r\n                        </ng-multiselect-dropdown>\r\n                    </div>                    \r\n                    <div class=\"ml-auto\">                        \r\n                        <button class=\"btn widthfit btn-border-b btn-rad-24 btn-small\" (click)=\"export()\">Export </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-3\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover table-responsive\" datatable [dtOptions]=\"dtOptions\"  *ngIf=\"alltransaction.length==0\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th class=\"text-center\">S.No.</th>\r\n                                    <th>Business name</th>\r\n                                    <th class=\"text-center\">User Name</th>\r\n                                    <th class=\"text-center\">Check Status</th>\r\n                                    <th class=\"text-center\">Measures Unit</th>\r\n                                    <th class=\"text-center\">Measures Value</th>\r\n                                    <th class=\"text-center\">Date</th>\r\n                                    <th class=\"text-center\">Time</th>\r\n                                    <th class=\"text-center\">Country</th>\r\n                                    <th class=\"text-center\">Location</th>\r\n                                    <th class=\"text-center\">User (who scanned)</th>\r\n                                </tr>\r\n                            </thead>                        \r\n                        </table>\r\n                        <table class=\"table table-hover table-responsive\" datatable [dtOptions]=\"dtOptions\"  *ngIf=\"alltransaction.length>0\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th class=\"text-center\">S.No.</th>\r\n                                    <th>Business name</th>\r\n                                    <th class=\"text-center\">User Name</th>\r\n                                    <th class=\"text-center\">Check Status</th>\r\n                                    <th class=\"text-center\">Measures Unit</th>\r\n                                    <th class=\"text-center\">Measures Value</th>\r\n                                    <th class=\"text-center\">Date</th>\r\n                                    <th class=\"text-center\">Time</th>\r\n                                    <th class=\"text-center\">Country</th>\r\n                                    <th class=\"text-center\">Location</th>\r\n                                    <th class=\"text-center\">User (who scanned)</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let item of alltransaction; let i = index;\">\r\n                                    <td class=\"text-center\">{{i+1}}</td>\r\n                                    <td style=\"font-weight: bold;\">{{item.Businessname}}</td>\r\n                                    <td class=\"text-center\">{{item.Username}}</td>\r\n                                    <td class=\"text-center\">{{item.CheckStatus}}</td>\r\n                                    <td class=\"text-center\">{{item.Measuresunit}}</td>\r\n                                    <td class=\"text-center\">{{item.MeasuresValue}}</td>\r\n                                    <td class=\"text-center\">{{item.MeasuresDate | date: date_format}}</td>\r\n                                    <td class=\"text-center\">{{item.MeasuresDate | date: time_format}}</td>\r\n                                    <td class=\"text-center\">{{item.BusinessCountry}}</td>\r\n                                    <td class=\"text-center\">{{item.Address1}}</td>                                    \r\n                                    <td class=\"text-center\">{{item.Scanedname}}</td>\r\n                                </tr>                            \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-healthpayment',\r\n  templateUrl: './healthpayment.component.html',\r\n  styleUrls: [\r\n    './healthpayment.component.scss'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HealthpaymentComponent implements OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  alltransaction:any[] = [];\r\n  alldata:any[] = [];\r\n  muticountries:any[] = [];\r\n  selectedcoutries:any[] = [];\r\n  dropdownSettings: any = {};\r\n  public  date_format = 'd MMM yyyy';\r\n  public  time_format = 'h.mm a';\r\n  constructor(\r\n    private api: ApisService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n  ) {\r\n      this.GetHealthTransaction();\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      // pagingType: 'full_numbers',\r\n      pageLength: 10,\r\n      lengthChange:false,\r\n      processing: true,\r\n      searching:true,\r\n      info:false,\r\n      \r\n    };\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'name',\r\n      textField: 'name',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true\r\n   };\r\n  }\r\n  GetHealthTransaction(){\r\n    var userdata = localStorage.getItem('Users');\r\n    var user=JSON.parse(userdata);\r\n    \r\n    this.spinner.show();\r\n      this.api.GetHealthTransaction(user.Id).subscribe(res => {\r\n        this.spinner.hide();\r\n        this.alltransaction=res['result'].data;  \r\n        this.alldata=res['result'].data; \r\n        this.muticountries=JSON.parse(user.Country);\r\n        this.selectedcoutries=JSON.parse(user.Country); \r\n    }, err => {\r\n      this.spinner.hide();\r\n    });  \r\n    \r\n  }\r\n  async changecountry(event){\r\n    var alldata=this.alldata;\r\n    var searchdata=[];\r\n    event.forEach(function (value) { \r\n      var ele =alldata.filter((element) => element.BusinessCountry == value.name);\r\n      searchdata=searchdata.concat(ele);\r\n    }); \r\n    this.alltransaction=searchdata;\r\n    // console.log(searchdata);\r\n  }\r\n  export(){\r\n    var exportdata=[];\r\n    this.alltransaction.forEach(obj => {      \r\n       var ele={\r\n         \"Business Name\":obj.Businessname,\r\n         \"User Name\":obj.Username,\r\n         \"Check Status\":obj.CheckStatus,\r\n         \"Measures Unit\":obj.Measuresunit,\r\n         \"Measures Value\":obj.MeasuresValue,\r\n         \"Date\":obj.MeasuresDate,\r\n         \"Country\":obj.BusinessCountry,\r\n         \"Location\":obj.Address1+\" \"+obj.Address2,               \r\n         \"User (who scanned)\":obj.Scanedname,\r\n       }\r\n       exportdata.push(ele);\r\n    });\r\n    var filename=\"Health Transaction\";\r\n    let csvData = this.ConvertToCSV(exportdata, ['Business Name','User Name','Check Status','Measures Unit','Measures Value','Date','Country','Location','User (who scanned)']);\r\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n    let dwldLink = document.createElement(\"a\");\r\n    let url = URL.createObjectURL(blob);\r\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n\r\n    if (isSafariBrowser) {  \r\n        dwldLink.setAttribute(\"target\", \"_blank\");\r\n    }\r\n        dwldLink.setAttribute(\"href\", url);\r\n        dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n        dwldLink.style.visibility = \"hidden\";\r\n        document.body.appendChild(dwldLink);\r\n        dwldLink.click();\r\n        document.body.removeChild(dwldLink);\r\n  }\r\n  ConvertToCSV(objArray, headerList) {\r\n\r\n      let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n      let str = '';\r\n      let row = 'S.No,';\r\n      for (let index in headerList) {\r\n          row += headerList[index] + ',';\r\n      }\r\n      row = row.slice(0, -1);\r\n      str += row + '\\r\\n';\r\n      for (let i = 0; i < array.length; i++) {\r\n          let line = (i+1)+'';\r\n          for (let index in headerList) {\r\n              let head = headerList[index];\r\n              line += ',' + array[i][head];\r\n        }\r\n        str += line + '\\r\\n';\r\n      }\r\n     return str;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HealthpaymentRoutingModule } from './healthpayment-routing.module';\r\nimport { HealthpaymentComponent } from './healthpayment.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HealthpaymentRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgxSkeletonLoaderModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n  declarations: [HealthpaymentComponent]\r\n})\r\nexport class HealthpaymentModule { }\r\n"],"sourceRoot":"webpack:///"}