{"version":3,"sources":["./src/app/auth/payment/payment-routing.module.ts","./src/app/auth/payment/payment.component.html","./src/app/auth/payment/payment.component.ts","./src/app/auth/payment/payment.module.ts","./src/app/payment/payment-routing.module.ts","./src/app/payment/payment.component.html","./src/app/payment/payment.component.ts","./src/app/payment/payment.module.ts"],"names":[],"mappings":"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","file":"payment-payment-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PaymentComponent } from './payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentComponent,\r\n    data: {\r\n      title: 'Payment'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentRoutingModule { }\r\n","<div class=\"web-sign-section\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12 m-auto wow fadeInUp\" data-wow-delay=\"0.2s\" style=\"margin-bottom: 50px !important;\">\r\n                <div class=\"bgwhite boxshadow-2 border-radius8 mt-50 pt-20 pb-20 pl-15 pr-15\"> \r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 m-auto\" >\r\n                            <div class=\"sign-bock bgwhite pt-10 pb-10 pl-10 pr-10\">\r\n                                <div class=\"row mt-2\">\r\n                                    <div class=\"col-md-12 text-center\">\r\n                                        <h4 class=\"fontsize-26 fontfamily-bold colorblack text-uppercase mt-0 mb-10\">Payment</h4>\r\n                                        <p class=\"fontsize-14 fontfamily-medium color4848 mb-10\">Enter your payment detail here</p>\r\n                                         <div class=\"premium-package-block d-flex pt-20 pb-20 pl-25 pr-25 text-left border-radius8 bggray1 mb-15\">\r\n                                            <div class=\"premium-package-block-lft text-center\">\r\n                                                <h6 class=\"fontfamily-medium fontsize-16 colorblack mb-1\">{{SubscriptionType}}</h6>\r\n                                                <h5 class=\"fontfamily-medium fontsize-24 colorblue1 mb-0\" style=\"font-weight: bold;\">$ {{Amount}} USD</h5>\r\n                                            </div>\r\n                                            <div class=\"text-left\">\r\n                                                <p class=\"mb-0 color4848 description\" [innerHtml]=\"Description\"></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row mt-3 mb-4\">\r\n                                    <div class=\"col-md-12\">\r\n                                        <h4 class=\"fontsize-18  mt-0 mb-10\" style=\"color:#007FFF\">Available Packages</h4>\r\n                                    </div>                                        \r\n                                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\"  (click)=\"select(item)\"  *ngFor=\"let item of childdata\">\r\n                                        <div class=\"configure-subscription-block relative p-3\"  [ngClass]=\"SubscriptionId == item.Id?'active':''\" style=\"box-shadow: 0 3px 10px 0 rgb(0 0 0 / 25%);border-radius: 5px;    background: #fff;\">\r\n                                            <div class=\"text-center\">\r\n                                                <h5 class=\"fontsize-20 colortype fontfamily-medium mb-2\">{{item.Name}}</h5>\r\n                                                <h5 class=\"fontsize-14 colormember fontfamily-medium mb-2\" *ngIf=\"item.Numbermin==item.Numbermax\" >{{item.Numbermin}} Account</h5>\r\n                                                <h5 class=\"fontsize-14 colormember fontfamily-medium mb-2\" *ngIf=\"item.Numbermin != item.Numbermax\" >{{item.Numbermin}} to {{item.Numbermax}} Account(s)</h5>\r\n                                                <p class=\"fontsize-18 fontfamily-bold coloramount mb-0\">$ {{item.Amount.toFixed(2)}} USD</p>                                                \r\n                                            </div>  \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-7 p-3 \">\r\n                                        <img src=\"assets/images/payment_img.png\" alt=\"\" class=\"img-fluid\">\r\n                                    </div>\r\n                                    <div class=\"col-md-5\">\r\n                                        <div >\r\n                                            <form [formGroup]=\"paymentform\" (ngSubmit)=\"submit()\">\r\n                                                \r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Email</label>\r\n                                                    <input type=\"email\" [(ngModel)]=\"Email\"  readonly [ngModelOptions]=\"{standalone: true}\"   placeholder=\"Email\" class=\"form-control input-tp-1\">\r\n                                                    <i class=\"fa fa-check-circle check-g\"></i>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Number of User(s)</label>\r\n                                                    <input type=\"number\" [(ngModel)]=\"UserNumber\"  (change)=\"Total()\"  name=\"UserNumber\"   formControlName=\"UserNumber\"   placeholder=\"Number of User(s)\" class=\"form-control input-tp-1\">\r\n                                                    <div *ngIf=\"paymentform.controls['UserNumber'].invalid && paymentform.get('UserNumber').touched\" class=\"alert-danger text-left error_text\">\r\n                                                        <span *ngIf=\"Numbermin==Numbermax\" > Number of User(s) is {{Numbermin}}</span>\r\n                                                        <span *ngIf=\"Numbermin!=Numbermax\" >Number of User(s) is {{Numbermin}} ~ {{Numbermax}}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Billing Frequency</label>\r\n                                                    <select class=\"form-control input-tp-1\"  (change)=\"Total()\" [(ngModel)]=\"Frequency\"    name=\"Frequency\"   formControlName=\"Frequency\" >\r\n                                                        <option value=\"\">Select Frequency</option>\r\n                                                        <option value=\"Monthly\">Monthly</option>\r\n                                                        <option value=\"Annually\">Annually</option>\r\n                                                    </select>\r\n                                                    <div *ngIf=\"paymentform.controls['Frequency'].invalid && paymentform.get('Frequency').touched\" class=\"alert-danger text-left error_text\">Frequency is required</div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp row\">\r\n                                                    <div class=\"col-md-6\">\r\n                                                        <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Subscription Date</label>\r\n                                                        <input type=\"text\" [(ngModel)]=\"SubscriptionDate\" [ngModelOptions]=\"{standalone: true}\" readonly   placeholder=\"SubscriptionDate\" class=\"form-control input-tp-1\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-6\">\r\n                                                        <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Next Payment Date</label>\r\n                                                        <input type=\"text\" [(ngModel)]=\"NextPaymentDate\"    [ngModelOptions]=\"{standalone: true}\" readonly  placeholder=\"NextPaymentDate\" class=\"form-control input-tp-1\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Total Amount</label>\r\n                                                    <label for=\"\" readonly class=\"form-control text-left input-tp-1\" style=\"padding-top: 14px;\">$ {{Totalamount.toFixed(2)}} USD</label>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <img src=\"assets/images/master.png\" alt=\"\" class=\"responsive\" style=\"width: 60px;margin-right: 10px;\">\r\n                                                    <img src=\"assets/images/visa.png\" alt=\"\" class=\"responsive\" style=\"width: 60px;\">\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Card Holder Name</label>\r\n                                                    <input type=\"text\" [(ngModel)]=\"Cardname\"   name=\"Cardname\" formControlName=\"Cardname\"  placeholder=\"Card Holder Name\" class=\"form-control input-tp-1\">\r\n                                                    <i class=\"fa fa-check-circle check-g\"></i>\r\n                                                    <div *ngIf=\"paymentform.controls['Cardname'].invalid &&  paymentform.get('Cardname').touched\" class=\"alert-danger text-left error_text\">Card Holder Name is required</div>\r\n                                                </div>\r\n                                                \r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Card Number</label>\r\n                                                    <input type=\"text\" [(ngModel)]=\"CardNumber\" maxlength=\"19\" (ngModelChange)=\"change_formatcreditNumber($event)\"  name=\"CardNumber\" formControlName=\"CardNumber\" placeholder=\"Card Number\" class=\"form-control input-tp-1\">\r\n                                                    <i class=\"fa fa-check-circle check-g\"></i>\r\n                                                    <div *ngIf=\"paymentform.controls['CardNumber'].invalid &&  paymentform.get('CardNumber').touched\" class=\"alert-danger text-left error_text\">Card Number is required</div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp row\">\r\n                                                    <div class=\"col-md-6\">\r\n                                                        <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Expiry Month</label>\r\n                                                        <input type=\"text\" [(ngModel)]=\"MM\"  maxlength=\"2\"   name=\"MM\"  formControlName=\"MM\" placeholder=\"MM\" class=\"form-control input-tp-1\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-6\">\r\n                                                        <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Expiry Year</label>\r\n                                                        <input type=\"text\" [(ngModel)]=\"YY\"  maxlength=\"2\"  name=\"YY\"  formControlName=\"YY\" placeholder=\"YY\" class=\"form-control input-tp-1\">\r\n                                                    </div>\r\n                                                    <div *ngIf=\"paymentform.controls['MM'].invalid && paymentform.controls['YY'].invalid && paymentform.get('MM').touched\" class=\"alert-danger ml-3 text-left error_text\">Expiry Date is required</div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Ccv</label>\r\n                                                    <input type=\"number\" [(ngModel)]=\"Ccv\"  name=\"Ccv\" formControlName=\"Ccv\"  placeholder=\"CCV\" class=\"form-control input-tp-1\">\r\n                                                    <div *ngIf=\"paymentform.controls['Ccv'].invalid &&  paymentform.get('Ccv').touched\" class=\"alert-danger text-left error_text\">CCV is required</div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Country</label>\r\n                                                    <select [(ngModel)]=\"Country\"  name=\"Country\" formControlName=\"Country\" class=\"form-control  input-tp-1\">\r\n                                                        <option value=\"\" >Select Country</option>\r\n                                                        <option value=\"{{item.name}}\"  *ngFor=\"let item of countries\">{{item.name}}</option>\r\n                                                      </select>\r\n                                                      <div *ngIf=\"paymentform.controls['Country'].invalid &&  paymentform.get('Country').touched\" class=\"alert-danger text-left error_text\">Country is required</div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Billing Address 1</label>\r\n                                                    <input type=\"text\" [(ngModel)]=\"Address1\"  name=\"Address1\" formControlName=\"Address1\" placeholder=\"Billing Address 1\" class=\"form-control input-tp-1\">\r\n                                                    <i class=\"fa fa-check-circle check-g\"></i>\r\n                                                    <div *ngIf=\"paymentform.controls['Address1'].invalid &&  paymentform.get('Address1').touched\" class=\"alert-danger text-left error_text\">Address is required</div>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp\">\r\n                                                    <label class=\"text-left\" style=\"font-size: 11px;\" for=\"\">Billing Address 2</label>\r\n                                                    <input type=\"text\" [(ngModel)]=\"Address2\"  [ngModelOptions]=\"{standalone: true}\" placeholder=\"Billing Address 2\" class=\"form-control input-tp-1\">\r\n                                                    <i class=\"fa fa-check-circle check-g\"></i>\r\n                                                </div>\r\n                                                <div class=\"form-group input-rw-tp mt-30 mb-0\">\r\n                                                    <button class=\"btn btn-large btn-rad-24\" type=\"submit\" [disabled]=\"submited\">PAY NOW</button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from 'src/app/services/apis.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {AbstractControl, FormControl,FormGroup,Validators} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.scss']\r\n})\r\nexport class PaymentComponent implements OnInit { \r\n  countries=[];\r\n  Email=\"\";\r\n  Cardname=\"\";\r\n  CardNumber=\"\";\r\n  UserNumber:number;\r\n  Frequency=\"\";\r\n  Totalamount=0;\r\n  MM=\"\";\r\n  YY=\"\";\r\n  Ccv=\"\";\r\n  SubscriptionDate=this.datePipe.transform(new Date(),\"yyyy-MM-dd\");  \r\n  NextPaymentDate=\"\";\r\n  Country=\"\";\r\n  Address1=\"\";\r\n  Address2=\"\";\r\n  Amount:any;\r\n  SubscriptionId:any;\r\n  SubscriptionType:any;\r\n  Description:any;\r\n  childdata:[];\r\n  Numbermin:0;\r\n  Numbermax:0;\r\n  paymentform:any;\r\n  submited=false;\r\n  constructor(\r\n    private api: ApisService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private client:HttpClient,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    if(!localStorage.getItem('Users') && !localStorage.getItem('loggedin')){      \r\n      this.router.navigate(['auth/registration']);\r\n    }else{\r\n      if(!localStorage.getItem('payplan')){\r\n        this.router.navigate(['auth/subscription']);\r\n      }else{\r\n        this.getsubscriptionslist();\r\n        this.Email=JSON.parse(localStorage.getItem('Users')).Email;\r\n        var payplan = JSON.parse(localStorage.getItem('payplan'));  \r\n        this.SubscriptionId=payplan.Id;       \r\n        this.Amount=payplan.Amount;\r\n        this.SubscriptionType=payplan.Name;\r\n        this.Description=payplan.Description;   \r\n        this.Numbermin=payplan.Numbermin;  \r\n        this.Numbermax=payplan.Numbermax;        \r\n         \r\n      }\r\n    }\r\n    \r\n  }\r\n    \r\n  ngOnInit() {    \r\n    this.paymentform = new FormGroup({\r\n        Cardname:new FormControl('',[Validators.required]),\r\n        UserNumber:new FormControl('',[Validators.required, (control: AbstractControl)=>Validators.min(Number(this.Numbermin))(control), (control: AbstractControl)=>Validators.max(Number(this.Numbermax))(control)]),\r\n        Frequency:new FormControl('',[Validators.required]),\r\n        CardNumber:new FormControl('',[Validators.required]),\r\n        MM:new FormControl('',[Validators.required]),\r\n        YY:new FormControl('',[Validators.required]),\r\n        Ccv:new FormControl('',[Validators.required]),\r\n        Country:new FormControl('',[Validators.required]),\r\n        Address1:new FormControl('',[Validators.required]),\r\n    })   \r\n    this.client.get('https://restcountries.eu/rest/v2/all').subscribe(data=>{         \r\n      for(let item in data)  {\r\n          this.countries.push(data[item]);\r\n          }\r\n          this.Country = \"Barbados\"\r\n      },error=>{\r\n       \r\n          console.log(error)\r\n      })\r\n  } \r\n  getsubscriptionslist(){\r\n    this.api.getsubscriptionslist().subscribe(resp => {\r\n      this.childdata=resp['data'];\r\n      }, err => {\r\n          console.log(err);\r\n      });\r\n  }\r\n \r\n  select(item){\r\n    this.Numbermin=item.Numbermin;\r\n    this.Numbermax=item.Numbermax;\r\n    this.Amount=item.Amount;\r\n    this.Description=item.Description;\r\n    this.SubscriptionType=item.Name;\r\n    this.SubscriptionId=item.Id;\r\n    this.Total();\r\n  } \r\n  Total(){\r\n    var  dt = new Date();\r\n    if(this.Frequency==\"Monthly\"){     \r\n     this.NextPaymentDate=this.add_months(dt, 1);\r\n     this.Totalamount=this.Amount*this.UserNumber;\r\n    }else if(this.Frequency==\"Annually\"){\r\n      this.NextPaymentDate=this.add_months(dt, 12);\r\n      this.Totalamount=this.Amount*this.UserNumber*12;\r\n    }\r\n  }  \r\n  add_months(dt, n) {\r\n   return this.datePipe.transform(new Date(dt.setMonth(dt.getMonth() + n)),\"yyyy-MM-dd\");  \r\n   }\r\n   change_formatcreditNumber (str) {\r\n    this.CardNumber= str.replace(/(\\d{4})(\\d)/, '$1-$2'); \r\n   }\r\n  submit(){   \r\n    \r\n    if(this.paymentform.invalid)\r\n    {\r\n        return;\r\n    }\r\n    this.submited = true;\r\n    var UserId=JSON.parse(localStorage.getItem('Users')).Id;    \r\n    var Name=JSON.parse(localStorage.getItem('Users')).Name;\r\n    var formdata={\r\n      UserId:UserId,\r\n      Name:Name,\r\n      SubscriptionId:this.SubscriptionId,\r\n      SubscriptionType:this.SubscriptionType,     \r\n      Description:this.Description,  \r\n      Email:this.Email,\r\n      UserNumber:this.UserNumber,\r\n      Frequency:this.Frequency,\r\n      SubscriptionDate:this.SubscriptionDate,\r\n      NextPaymentDate:this.NextPaymentDate,\r\n      Totalamount:this.Totalamount,\r\n      Cardname:this.Cardname,\r\n      CardNumber:this.CardNumber.replace(/\\-/gi, ''),\r\n      ExpiryMonth:this.MM,\r\n      ExpiryYear:this.YY,\r\n      Ccv:this.Ccv,\r\n      Country:this.Country,\r\n      Address1:this.Address1,\r\n      Address2:this.Address2,\r\n    }\r\n    // console.log(formdata);\r\n    this.spinner.show();\r\n    this.api.Payment(formdata).subscribe(res => {\r\n        this.spinner.hide();\r\n        if(res['result'].status==1){\r\n          this.submited = false;\r\n          this.api.alerts('Success', res['result'].meassage, 'success');\r\n          localStorage.setItem(\"Users\",JSON.stringify(res['result'].user));\r\n            window.location.href = './location';\r\n        }else{\r\n          this.api.alerts('Error', res['result'].meassage, 'error'); \r\n          this.submited = false;\r\n        }\r\n    }, err => {\r\n        this.spinner.hide();\r\n        console.log(err);\r\n    });\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaymentComponent } from './payment.component';\r\nimport { PaymentRoutingModule } from './payment-routing.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PaymentRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  declarations: [PaymentComponent]\r\n})\r\nexport class PaymentModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {PaymentComponent} from './payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentComponent,\r\n    data: {\r\n      breadcrumb: 'Subscription Payments'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentRoutingModule { }\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"right-sidebar-content mt-40 bgwhite boxshadow-2 border-radius8\">\r\n            <div class=\"\">\r\n                <div class=\"d-flex pt-0 pb-15 pl-20 pr-20\">\r\n                    <div class=\"ttle-h fontsize-14 fontfamily-medium color333\">Subscription Payments</div>\r\n                    <div class=\"ml-auto\">\r\n                        <button class=\"btn widthfit btn-border-b btn-rad-24 btn-small\" (click)=\"export()\">Export </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-3\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\" *ngIf=\"paymentdata.length==0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th class=\"text-left\">Business Name</th>\r\n                                    <th class=\"text-center\">Subscription type</th>\r\n                                    <th class=\"text-center\">Number of Users</th>\r\n                                    <th class=\"text-center\">Frequency</th>\r\n                                    <th class=\"text-center\">Amount</th>\r\n                                    <th class=\"text-left\">Subscription Date</th>\r\n                                    <th class=\"text-center\">Next Payment Date</th>\r\n                                    <th class=\"text-center\">Payment Status</th>\r\n                                    <th class=\"text-center\">Account Status</th>\r\n                                </tr>\r\n                            </thead>                        \r\n                        </table>\r\n                        <table class=\"table table-hover\" datatable [dtOptions]=\"dtOptions\" *ngIf=\"paymentdata.length>0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">S.No.</th>\r\n                                    <th class=\"text-left\">Business Name</th>\r\n                                    <th class=\"text-center\">Subscription type</th>\r\n                                    <th class=\"text-center\">Number of Users</th>\r\n                                    <th class=\"text-center\">Frequency</th>\r\n                                    <th class=\"text-center\">Amount</th>\r\n                                    <th class=\"text-left\">Subscription Date</th>\r\n                                    <th class=\"text-center\">Next Payment Date</th>\r\n                                    <th class=\"text-center\">Payment Status</th>\r\n                                    <th class=\"text-center\">Account Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let item of paymentdata; let i = index;\">\r\n                                    <td class=\"text-center\">{{i + 1}}</td>\r\n                                    <td class=\"text-left\">{{item.Name}}</td>\r\n                                    <td class=\"text-center\">{{item.SubscriptionType}}</td>\r\n                                    <td class=\"text-center\">{{item.UserNumber}}</td>\r\n                                    <td class=\"text-center\">{{item.Frequency}}</td>\r\n                                    <td class=\"text-center\">${{item.Totalamount}}</td>\r\n                                    <td class=\"text-center\">{{item.SubscriptionDate | date: date_format}}</td>\r\n                                    <td class=\"text-center\">{{item.NextPaymentDate | date: date_format}}</td>\r\n                                    <td class=\"text-center status-blue\" [ngClass]=\"((item.AccountStatus=='In Good Standing')? 'status-blue' :'status-red')\">{{item.AccountStatus}}</td>\r\n                                    <td class=\"text-center \" [ngClass]=\"((item.Status==1)? 'status-blue' :'status-red')\">{{(item.Status==1)? \"Active\" :\"Non Active\"}}</td>\r\n                                </tr>                            \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport * as moment from 'moment';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: [\r\n    './payment.component.scss'\r\n  ],\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  payments:any;\r\n  paymentdata= [];\r\n  public  date_format = 'd MMM yyyy';\r\n  dtOptions: DataTables.Settings = {};\r\n  constructor(\r\n    private api: ApisService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n  ) {   \r\n    this.getpaymentData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      // pagingType: 'full_numbers',\r\n      pageLength: 10,\r\n      lengthChange:false,\r\n      processing: true,\r\n      searching:true,\r\n      info:false,\r\n      \r\n    };\r\n  }\r\n  getpaymentData(){\r\n    this.spinner.show();\r\n      this.api.getpaymentData().subscribe(res => {\r\n        this.spinner.hide();\r\n        this.paymentdata=res['result'].data;\r\n        this.dtOptions = {\r\n          pageLength: 10,\r\n          lengthChange:false,\r\n          processing: true,\r\n          searching:true,\r\n          info:false,\r\n          \r\n        };\r\n    }, err => {\r\n      this.spinner.hide();\r\n    }); \r\n  }\r\n  export(){\r\n  var exportdata=[];\r\n  this.paymentdata.forEach(obj => { \r\n      var location= obj.Address1+\" \"+obj.Address2+\" \"+obj.Country;    \r\n      var ele={\r\n        \"Business Name\":obj.Name,\r\n        \"Subscription type\":obj.SubscriptionType,\r\n        \"Number of Users\":obj.UserNumber,\r\n        \"Frequency\":obj.Frequency,\r\n        \"Amount\":\"$\"+obj.Totalamount,\r\n        \"OrderId\":obj.OrderId,\r\n        \"Location\":location.replace(\",\", \" \"),\r\n        \"Subscription Date\":obj.SubscriptionDate,\r\n        \"Next Payment Date\":obj.NextPaymentDate,\r\n        \"Payment Status\":obj.AccountStatus,       \r\n        \"Account Status\":(obj.Status==1)? \"Active\":\"Non Active\"\r\n      }\r\n      exportdata.push(ele);\r\n    });\r\n    var filename=\"Subscription Payments\";\r\n    let csvData = this.ConvertToCSV(exportdata, ['Business Name','Subscription type','Number of Users','Frequency','Amount','OrderId','Location','Subscription Date','Next Payment Date','Payment Status','Account Status']);\r\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n    let dwldLink = document.createElement(\"a\");\r\n    let url = URL.createObjectURL(blob);\r\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n\r\n    if (isSafariBrowser) {  \r\n        dwldLink.setAttribute(\"target\", \"_blank\");\r\n    }\r\n        dwldLink.setAttribute(\"href\", url);\r\n        dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n        dwldLink.style.visibility = \"hidden\";\r\n        document.body.appendChild(dwldLink);\r\n        dwldLink.click();\r\n        document.body.removeChild(dwldLink);\r\n  }\r\n  ConvertToCSV(objArray, headerList) {\r\n\r\n      let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n      let str = '';\r\n      let row = 'S.No,';\r\n      for (let index in headerList) {\r\n          row += headerList[index] + ',';\r\n      }\r\n      row = row.slice(0, -1);\r\n      str += row + '\\r\\n';\r\n      for (let i = 0; i < array.length; i++) {\r\n          let line = (i+1)+'';\r\n          for (let index in headerList) {\r\n              let head = headerList[index];\r\n              line += ',' + array[i][head];\r\n        }\r\n        str += line + '\\r\\n';\r\n      }\r\n    return str;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentRoutingModule } from './payment-routing.module';\r\nimport { PaymentComponent } from './payment.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PaymentRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgxSkeletonLoaderModule\r\n  ],\r\n  declarations: [PaymentComponent]\r\n})\r\nexport class PaymentModule { }\r\n"],"sourceRoot":"webpack:///"}