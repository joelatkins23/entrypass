{"version":3,"sources":["./src/app/auth/forgot/forgot-routing.module.ts","./src/app/auth/forgot/forgot.component.html","./src/app/auth/forgot/forgot.component.ts","./src/app/auth/forgot/forgot.module.ts"],"names":[],"mappings":"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","file":"forgot-forgot-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ForgotComponent } from './forgot.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotComponent,\r\n    data: {\r\n      title: 'Forgot'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ForgotRoutingModule { }\r\n","<div class=\"web-sign-section\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-8 col-lg-9 col-md-12 col-sm-12 col-12 m-auto wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n        <div class=\"bgwhite boxshadow-2 border-radius8 mt-50 pt-20 pb-20 pl-15 pr-15\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 m-auto\">\r\n              <div class=\"sign-bock bgwhite pt-10 pb-10 pl-10 pr-10\">\r\n                <div class=\"text-center\">\r\n                  <!-- <img src=\"images/logo.svg\" class=\"sign-logo\"> -->\r\n                  <h4 class=\"fontsize-26 fontfamily-bold colorblack text-uppercase mt-0 mb-10\">ForGot password?</h4>\r\n                  <p class=\"fontsize-14 fontfamily-medium color4848 mb-50\">Enter the email address linked to your account</p>\r\n                  <form [formGroup]=\"form\" validate (ngSubmit)=\"submit()\">\r\n                    <div class=\"form-group input-rw-tp\" [ngClass]=\"(form.controls['email'].invalid && submitted) ? 'mb-0':''\">\r\n                      <input name=\"email\"  [(ngModel)]=\"Email\"  placeholder=\"Email address\" class=\"form-control input-tp-1\" required type=\"email\" formControlName=\"email\">\r\n                      <i class=\"fa fa-check-circle check-g\"></i>\r\n                    </div>   \r\n                    <div *ngIf=\"form.controls['email'].invalid && submitted\" class=\"alert-danger text-left\">Email is not valid</div>                \r\n                    <div class=\"form-group input-rw-tp mt-30 mb-0\">\r\n                      <button type=\"submit\"  class=\"btn btn-large btn-rad-24\">Submit</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from 'src/app/services/apis.service';\r\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {FormGroup,FormControl,Validator, Validators} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.scss']\r\n})\r\nexport class ForgotComponent implements OnInit { \r\n  submitted = false;\r\n  Email='';\r\n  form = new FormGroup({\r\n      email:new FormControl('',[Validators.required,Validators.email])\r\n  })\r\n  constructor(\r\n    private api: ApisService,\r\n    private toastyService: ToastyService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService\r\n  ) {\r\n   \r\n  }\r\n  ngOnInit() {\r\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n  } \r\n\r\n  submit(){\r\n    this.submitted = true;\r\n      if(this.form.invalid)\r\n      {\r\n          return false;\r\n      }\r\n      var formdata={\r\n        \"Email\":this.Email\r\n    }\r\n    this.api.EmailCheck(formdata).subscribe(res => {\r\n        if(res['result'].status==1){         \r\n          this.api.alerts('Success', res['result'].message, 'success');  \r\n          // this.router.navigate(['auth/reset'], navData); \r\n        }else if(res['result'].status==0){\r\n          this.api.alerts('Error', res['result'].message, 'error');  \r\n        }\r\n        \r\n    }, err => {\r\n        console.log(err);\r\n    });\r\n  }\r\n  error(message) {\r\n    const toastOptions: ToastOptions = {\r\n      title: this.api.translate('Error'),\r\n      msg: message,\r\n      showClose: true,\r\n      timeout: 2000,\r\n      theme: 'default',\r\n      onAdd: (toast: ToastData) => {\r\n        console.log('Toast ' + toast.id + ' has been added!');\r\n      },\r\n      onRemove: function (toast: ToastData) {\r\n        console.log('Toast ' + toast.id + ' has been removed!');\r\n      }\r\n    };\r\n    // Add see all possible types in one shot\r\n    this.toastyService.error(toastOptions);\r\n  }\r\n  success(message) {\r\n    const toastOptions: ToastOptions = {\r\n      title: this.api.translate('Success'),\r\n      msg: message,\r\n      showClose: true,\r\n      timeout: 2000,\r\n      theme: 'default',\r\n      onAdd: (toast: ToastData) => {\r\n        console.log('Toast ' + toast.id + ' has been added!');\r\n      },\r\n      onRemove: function (toast: ToastData) {\r\n        console.log('Toast ' + toast.id + ' has been removed!');\r\n      }\r\n    };\r\n    // Add see all possible types in one shot\r\n    this.toastyService.success(toastOptions);\r\n  } \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ForgotComponent } from './forgot.component';\r\nimport { ForgotRoutingModule } from './forgot-routing.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ForgotRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  declarations: [ForgotComponent]\r\n})\r\nexport class ForgotModule { }\r\n"],"sourceRoot":"webpack:///"}